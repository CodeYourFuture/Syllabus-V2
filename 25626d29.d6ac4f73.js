(window.webpackJsonp=window.webpackJsonp||[]).push([[35],{109:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return i})),a.d(t,"metadata",(function(){return l})),a.d(t,"toc",(function(){return c})),a.d(t,"default",(function(){return d}));var o=a(3),n=a(7),r=(a(0),a(257)),i={id:"marking-guide",title:"Marking Guide",sidebar_label:"Marking Guide"},l={unversionedId:"guides/marking-guide",id:"guides/marking-guide",isDocsHomePage:!1,title:"Marking Guide",description:"This Rubric should be used to guide your assessment of Students Coursework at CodeYourFuture",source:"@site/docs/guides/marking-guide.md",slug:"/guides/marking-guide",permalink:"/guides/marking-guide",editUrl:"https://github.com/CodeYourFuture/Syllabus-V2/edit/master/docs/guides/marking-guide.md",version:"current",sidebar_label:"Marking Guide"},c=[{value:"How To Mark Coursework",id:"how-to-mark-coursework",children:[]},{value:"Overview",id:"overview",children:[{value:"Completeness (/10)",id:"completeness-10",children:[]},{value:"Code Style (/5)",id:"code-style-5",children:[]},{value:"Clarity (/5)",id:"clarity-5",children:[]}]},{value:"Explanations",id:"explanations",children:[{value:"Complete All Tasks",id:"complete-all-tasks",children:[]},{value:"Achieves task in intended way",id:"achieves-task-in-intended-way",children:[]},{value:"Edge Cases",id:"edge-cases",children:[]},{value:"Small Functions",id:"small-functions",children:[]},{value:"Debug Logging",id:"debug-logging",children:[]},{value:"Error Responses",id:"error-responses",children:[]},{value:"Non-duplicated Code",id:"non-duplicated-code",children:[]},{value:"Commented Out Code",id:"commented-out-code",children:[]},{value:"Dead Code",id:"dead-code",children:[]},{value:"Coding Standards",id:"coding-standards",children:[]},{value:"Well Indented Code",id:"well-indented-code",children:[]},{value:"Good Function Names",id:"good-function-names",children:[]},{value:"Good Variable Names",id:"good-variable-names",children:[]},{value:"More Readable Code",id:"more-readable-code",children:[]},{value:"Hard Coded Values",id:"hard-coded-values",children:[]}]}],s={toc:c};function d(e){var t=e.components,a=Object(n.a)(e,["components"]);return Object(r.b)("wrapper",Object(o.a)({},s,a,{components:t,mdxType:"MDXLayout"}),Object(r.b)("p",null,"This Rubric should be used to guide your assessment of Students Coursework at CodeYourFuture"),Object(r.b)("h2",{id:"how-to-mark-coursework"},"How To Mark Coursework"),Object(r.b)("p",null,"Details on ",Object(r.b)("strong",{parentName:"p"},"how")," to mark coursework can be found on the documentation website"),Object(r.b)("p",null,Object(r.b)("a",Object(o.a)({parentName:"p"},{href:"https://docs.codeyourfuture.io/teams/education/homework-feedback"}),"Coursework Feedback Docs")),Object(r.b)("h2",{id:"overview"},"Overview"),Object(r.b)("h3",{id:"completeness-10"},"Completeness (/10)"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"The code achieves all of the tasks in the coursework ",Object(r.b)("a",Object(o.a)({parentName:"li"},{href:"#complete-all-tasks"}),"[read more]")),Object(r.b)("li",{parentName:"ul"},'The code achieves the task in an intended way and solves the "general" problem ',Object(r.b)("a",Object(o.a)({parentName:"li"},{href:"#achieves-task-in-intended-way"}),"[read more]")),Object(r.b)("li",{parentName:"ul"},"The code covers all edge cases ",Object(r.b)("a",Object(o.a)({parentName:"li"},{href:"#edge-cases"}),"[read more]")),Object(r.b)("li",{parentName:"ul"},"The code does not contain any obvious bugs"),Object(r.b)("li",{parentName:"ul"},"The code handles error responses as well as success responses ",Object(r.b)("a",Object(o.a)({parentName:"li"},{href:"#error-responses"}),"[read more]"))),Object(r.b)("h3",{id:"code-style-5"},"Code Style (/5)"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"The code follows a consistent style"),Object(r.b)("li",{parentName:"ul"},"The code follows CodeYourFuture's coding standards ",Object(r.b)("a",Object(o.a)({parentName:"li"},{href:"#coding-standards"}),"[read more]")),Object(r.b)("li",{parentName:"ul"},"The code is well indented ",Object(r.b)("a",Object(o.a)({parentName:"li"},{href:"#well-indented-code"}),"[read more]")),Object(r.b)("li",{parentName:"ul"},"The code uses good variable names ",Object(r.b)("a",Object(o.a)({parentName:"li"},{href:"#good-variable-names"}),"[read more]")),Object(r.b)("li",{parentName:"ul"},"The code uses good function names ",Object(r.b)("a",Object(o.a)({parentName:"li"},{href:"#good-function-names"}),"[read more]")),Object(r.b)("li",{parentName:"ul"},"The code uses code which is easy to read and understand ",Object(r.b)("a",Object(o.a)({parentName:"li"},{href:"#more-readable-code"}),"[read more]")),Object(r.b)("li",{parentName:"ul"},"The code should not use hard coded values ",Object(r.b)("a",Object(o.a)({parentName:"li"},{href:"#hard-coded-values"}),"[read more]"))),Object(r.b)("h3",{id:"clarity-5"},"Clarity (/5)"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"The code is divided into functions of a good size. ",Object(r.b)("a",Object(o.a)({parentName:"li"},{href:"#small-functions"}),"[read more]")),Object(r.b)("li",{parentName:"ul"},"Code is not repeated in several locations of the coursework. ",Object(r.b)("a",Object(o.a)({parentName:"li"},{href:"#non-duplicated-code"}),"[read more]")),Object(r.b)("li",{parentName:"ul"},"The coursework does not have commented out code. ",Object(r.b)("a",Object(o.a)({parentName:"li"},{href:"#commented-out-code"}),"[read more]")),Object(r.b)("li",{parentName:"ul"},"There is no dead code in the coursework ",Object(r.b)("a",Object(o.a)({parentName:"li"},{href:"#dead-code"}),"[read more]")),Object(r.b)("li",{parentName:"ul"},"There is no extra or debug logging ",Object(r.b)("a",Object(o.a)({parentName:"li"},{href:"#debug-logging"}),"[read more]"))),Object(r.b)("h2",{id:"explanations"},"Explanations"),Object(r.b)("h3",{id:"complete-all-tasks"},"Complete All Tasks"),Object(r.b)("p",null,"Completion of all of the tasks is an essential part of the homework."),Object(r.b)("p",null,"If there are tests that you have to make pass, you should ",Object(r.b)("strong",{parentName:"p"},"not")," edit them to make your code work. Doing so will mean you get marked zero for this section."),Object(r.b)("h3",{id:"achieves-task-in-intended-way"},"Achieves task in intended way"),Object(r.b)("p",null,"As well as completing all of the tasks, you should be sure to complete the task in a way that we are expecting and that covers all cases."),Object(r.b)("p",null,'You should also always try to solve the problem in the "general" rather than in the "specific".'),Object(r.b)("p",null,"For example, we could set the challenge"),Object(r.b)("blockquote",null,Object(r.b)("p",{parentName:"blockquote"},"Print every element of an array to the console\nTest 1: let array = ",'["A","B","C"]',"\nTest 2: let array = ",'["1","2","3","4"]',"\nTest 3: let array = ",'["Up", "Down"]')),Object(r.b)("p",null,"To make this test pass you could write"),Object(r.b)("pre",null,Object(r.b)("code",Object(o.a)({parentName:"pre"},{className:"language-js"}),"console.log(array[0]);\nconsole.log(array[1]);\nconsole.log(array[2]);\nconsole.log(array[3]);\n")),Object(r.b)("p",null,"However, that would not work for ",Object(r.b)("em",{parentName:"p"},"every")," case that exists - only the ones that we're writing. Your aim isn't to just pass the tests, it's to write good code that solves the problem."),Object(r.b)("p",null,"A better solution would be"),Object(r.b)("pre",null,Object(r.b)("code",Object(o.a)({parentName:"pre"},{className:"language-js"}),"array.forEach((item) => {\n  console.log(item);\n});\n")),Object(r.b)("h3",{id:"edge-cases"},"Edge Cases"),Object(r.b)("p",null,"Edge cases are when code does something you're not expecting and you didn't account for in your code."),Object(r.b)("p",null,"Some edge cases are valid data, and some are not."),Object(r.b)("p",null,"Some examples of valid edge case are that some names contain punctuation, or some people may only have a single name, which your code needs to be able to handle. An example of an invalid edge case is if someone doesn't enter a name at all, which your code should reject - if your code doesn't notice the problem where the user provides their name, other code you wrote may make assumptions which are incorrect."),Object(r.b)("p",null,"See ",Object(r.b)("a",Object(o.a)({parentName:"p"},{href:"https://www.kalzumeus.com/2010/06/17/falsehoods-programmers-believe-about-names/"}),"Falsehoods Programmers Believe About Names")," for some interesting examples."),Object(r.b)("p",null,"Good code should handle all of these cases so that they can't happen - and if they do - they don't make your program crash or stop working."),Object(r.b)("p",null,"Validations are used wherever necessary. The code never breaks under any circumstances. Especially under invalid inputs that come from the user end. Regardless of it being a negative, over-sized, invalid format, etc., every input passed should be processed, sanitized before taking it further. Every object is checked for its actual data existence before accessing its properties."),Object(r.b)("h4",{id:"more-reading"},"More Reading"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(o.a)({parentName:"li"},{href:"https://www.geeksforgeeks.org/dont-forget-edge-cases/"}),"Don't forget edge cases"))),Object(r.b)("h3",{id:"small-functions"},"Small Functions"),Object(r.b)("p",null,'Writing small functions makes your code easier to understand and easier to work with. Ideally you should be able to describe what a function does in one sentence, without the word "and".'),Object(r.b)("p",null,'Good examples: "This function returns the user\'s favourite author", "This other function Tweets the title of an author\'s most popular book".'),Object(r.b)("p",null,"Bad example: \"This function finds the user's favourite author and sends a Tweet with the name of that author's most popular book\"."),Object(r.b)("h4",{id:"more-reading-1"},"More Reading"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(o.a)({parentName:"li"},{href:"https://thecodersblog.com/how-big-a-function-should-be/"}),"How big should a function be?"))),Object(r.b)("h3",{id:"debug-logging"},"Debug Logging"),Object(r.b)("p",null,"The code should not contain debug logging that was used during development. For example, any logs like"),Object(r.b)("pre",null,Object(r.b)("code",Object(o.a)({parentName:"pre"},{className:"language-js"}),'console.log("Does this work");\nconsole.log("1");\nconsole.log(array[1].object.name);\n')),Object(r.b)("p",null,"should be removed."),Object(r.b)("h3",{id:"error-responses"},"Error Responses"),Object(r.b)("p",null,"Not just the error messages, every response that is returned by the server must be properly handled. It should have necessary headers, response messages, error codes and any other necessary details attached with it in required format. All possible scenarios are tested to avoid timeouts, unresponsive UI, etc."),Object(r.b)("h4",{id:"more-reading-2"},"More Reading"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(o.a)({parentName:"li"},{href:"https://usefulangle.com/post/314/javascript-fetch-error-handling"}),"Handling Error HTTP Responses in Javascript fetch"))),Object(r.b)("h3",{id:"non-duplicated-code"},"Non-duplicated Code"),Object(r.b)("p",null,"Duplicated code should be moved into functions so they can be reference from multiple places."),Object(r.b)("p",null,"Having lots of duplicated code in your coursework means that it is harder to change or update your code."),Object(r.b)("h4",{id:"more-reading-3"},"More Reading"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(o.a)({parentName:"li"},{href:"https://dev.to/thinkster/code-smell-duplicated-code-fc1"}),"Duplication Code"))),Object(r.b)("h3",{id:"commented-out-code"},"Commented Out Code"),Object(r.b)("p",null,"Commenting out code is a great way to debug your code but when you use it to keep code for later it can become a problem."),Object(r.b)("p",null,"Instead of commenting out code you want to keep but not use, consider moving it to separate file. This will make it easier to keep track of the code you're currently working on."),Object(r.b)("p",null,"Having lots of commented out code make your code harder to read and make it easier for you to get overwhelmed and lost in your code."),Object(r.b)("p",null,"Since we use Git to record all of the changes to our code you can always use the Git History to see everything that has changed."),Object(r.b)("h4",{id:"more-reading-4"},"More Reading"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(o.a)({parentName:"li"},{href:"https://kentcdodds.com/blog/please-dont-commit-commented-out-code"}),"Please don't comment out code")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(o.a)({parentName:"li"},{href:"https://www.freecodecamp.org/news/code-comments-the-good-the-bad-and-the-ugly-be9cc65fbf83/"}),"Putting comments in code: the good, the bad, and the ugly.")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(o.a)({parentName:"li"},{href:"https://syllabus.codeyourfuture.io/git/index#history"}),"Git History"))),Object(r.b)("h3",{id:"dead-code"},"Dead Code"),Object(r.b)("p",null,"Dead Code is code that is in your coursework but can't be reached or run by your program."),Object(r.b)("p",null,"For example, a function that is never called is considered dead code."),Object(r.b)("p",null,"Dead code should be removed from your coursework or re-written so it is used. Having lots of dead code in your coursework can make your work hard to read and understand."),Object(r.b)("h4",{id:"more-reading-5"},"More Reading"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(o.a)({parentName:"li"},{href:"https://en.wikipedia.org/wiki/Dead_code"}),"Dead Code"))),Object(r.b)("h3",{id:"coding-standards"},"Coding Standards"),Object(r.b)("p",null,"All code written by Students at CodeYourFuture should follow our ",Object(r.b)("a",Object(o.a)({parentName:"p"},{href:"./coding-standards"}),"Coding Standard")," guidelines."),Object(r.b)("p",null,"These guidelines are based on ones used in industry."),Object(r.b)("p",null,"Guidelines are important in big organisations so that everyone writes code in the same way across a large application. It's important that students get used to writing in a consistent style early on."),Object(r.b)("h4",{id:"more-reading-6"},"More Reading"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(o.a)({parentName:"li"},{href:"./coding-standards"}),"CodeYourFuture Coding Standards"))),Object(r.b)("h3",{id:"well-indented-code"},"Well Indented Code"),Object(r.b)("p",null,"Indentation is a fundamental aspect of code styling, and plays a large role in influencing readability. First of all, indented code is easier to read through than unindented code."),Object(r.b)("p",null,"With unindented code, the overall structure of the code might be somewhat difficult to see. However, with indented code, the overall structure of the code jumps out at you. Tabs tell you that a line of code is inside a function, loop, if statement, or else statement. Knowing which parts of the code is inside what will become especially important when your code becomes more complex."),Object(r.b)("h4",{id:"more-reading-7"},"More Reading"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(o.a)({parentName:"li"},{href:"http://mrbool.com/importance-of-code-indentation/29079"}),"Importance of Code Indentation"))),Object(r.b)("h3",{id:"good-function-names"},"Good Function Names"),Object(r.b)("p",null,"Good function names are important so that code is easy to read and understand what it is doing."),Object(r.b)("p",null,"A bad function name might be"),Object(r.b)("pre",null,Object(r.b)("code",Object(o.a)({parentName:"pre"},{className:"language-js"}),"function doWork() {}\n")),Object(r.b)("p",null,"A good function name might be"),Object(r.b)("pre",null,Object(r.b)("code",Object(o.a)({parentName:"pre"},{className:"language-js"}),"function removeCaptialLetters(){)\n")),Object(r.b)("p",null,"Sometimes if you can't come up with a good function name it's an indication that the function doesn't have a nice, crisp focus and needs to be refactored."),Object(r.b)("p",null,"But it's well worth the trouble finding the best possible names, since it makes your code so much more understandable and usable."),Object(r.b)("h4",{id:"more-reading-8"},"More Reading"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(o.a)({parentName:"li"},{href:"https://dmitripavlutin.com/coding-like-shakespeare-practical-function-naming-conventions/"}),"Coding like Shakespeare: Practical Function Naming Conventions")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(o.a)({parentName:"li"},{href:"https://stackoverflow.com/questions/979118/trouble-coming-up-with-good-names-for-functions"}),"Trouble coming up with good names for functions"))),Object(r.b)("h3",{id:"good-variable-names"},"Good Variable Names"),Object(r.b)("p",null,"Each variable is named so it is clear which variable is being used at any time. It is important to use meaningful names for variables:"),Object(r.b)("p",null,"For example,"),Object(r.b)("pre",null,Object(r.b)("code",Object(o.a)({parentName:"pre"},{className:"language-js"}),"let pocketMoney = 20;\n")),Object(r.b)("p",null,"means that the variable ",Object(r.b)("inlineCode",{parentName:"p"},"pocketMoney")," is being used to store how much pocket money you have. Right now you have \xa320."),Object(r.b)("p",null,"The name given to each variable is up to the programmer, but ideally a variable name should have meaning you can understand without needing to read any other code, i.e. it should reflect the value that it is holding."),Object(r.b)("h4",{id:"more-reading-9"},"More Reading"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(o.a)({parentName:"li"},{href:"https://spin.atomicobject.com/2017/11/01/good-variable-names/"}),"Good Variable Names")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(o.a)({parentName:"li"},{href:"https://www.bbc.co.uk/bitesize/guides/zwmbgk7/revision/3"}),"Programming Basics - Naming Variables"))),Object(r.b)("h3",{id:"more-readable-code"},"More Readable Code"),Object(r.b)("p",null,"The most important thing when writing code is to make it easy to read and understand, and as simple as possible."),Object(r.b)("p",null,"An example of write more readable code might be using a ",Object(r.b)("inlineCode",{parentName:"p"},"filter")," instead of a complicated ",Object(r.b)("inlineCode",{parentName:"p"},"for")," loop. This is better, because it is immediately obvious what you're trying to do - filter an array - and you're less likely to make a mistake using it."),Object(r.b)("p",null,"For example,"),Object(r.b)("pre",null,Object(r.b)("code",Object(o.a)({parentName:"pre"},{className:"language-js"}),'const trees = ["Oak", "Birch", "Beech", "Elm", "Hazel"];\n\nlet treesBeginningWithB = [];\nfor (var i = 0; i < trees.length; i++) {\n  if (trees[i].chatAt(0) === "B") {\n    treesBeginningWithB.push(trees[i]);\n  }\n}\n\nconsole.log(treesBeginningWithB); // ["Birch", "Beech"]\n')),Object(r.b)("p",null,"Could be written like this be easier to understand and read."),Object(r.b)("pre",null,Object(r.b)("code",Object(o.a)({parentName:"pre"},{className:"language-js"}),'const trees = ["Oak", "Birch", "Beech", "Elm", "Hazel"];\n\nlet treesBeginningWithB = trees.filter((tree) => tree.chatAt(0) === "B");\n\nconsole.log(treesBeginningWithB); // ["Birch", "Beech"]\n')),Object(r.b)("p",null,"As you can see, we've reduced six lines of code into one and it is immediately obvious that it is trying to filter the trees beginning with B."),Object(r.b)("p",null,"Writing readable code is a big topic and one that you'll get better at as you go on. We encourage you to read more about it."),Object(r.b)("h4",{id:"more-reading-10"},"More Reading"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(o.a)({parentName:"li"},{href:"https://blog.pragmaticengineer.com/readable-code/"}),"Readable Code"))),Object(r.b)("h3",{id:"hard-coded-values"},"Hard Coded Values"),Object(r.b)("p",null,"Hard coded values with no explanation make code hard to understand and read in the long term. For example"),Object(r.b)("pre",null,Object(r.b)("code",Object(o.a)({parentName:"pre"},{className:"language-js"}),'getData("https://www.api.com/retrieve");\ncalculateScreenSize(1800);\n')),Object(r.b)("p",null,"Will be hard to understand when you codebase grows."),Object(r.b)("p",null,"Instead use constants to store your hard coded values - this means the value has a name, which can be ",Object(r.b)("a",Object(o.a)({parentName:"p"},{href:"#good-variable-names"}),"usefully descriptive"),". For example"),Object(r.b)("pre",null,Object(r.b)("code",Object(o.a)({parentName:"pre"},{className:"language-js"}),'let WEATHER_ENDPOINT = "https://www.api.com/retrieve";\nlet MAX_SCREEN_WIDTH = 1800;\n\ngetData(WEATHER_ENDPOINT);\ncalculateScreenSize(MAX_SCREEN_WIDTH);\n')),Object(r.b)("h4",{id:"more-reading-11"},"More Reading"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(o.a)({parentName:"li"},{href:"https://softwareengineering.stackexchange.com/questions/67982/is-it-ever-a-good-idea-to-hardcode-values-into-our-applications"}),"Is it ever a good idea to hardcode values into our applications?"))))}d.isMDXComponent=!0},257:function(e,t,a){"use strict";a.d(t,"a",(function(){return b})),a.d(t,"b",(function(){return h}));var o=a(0),n=a.n(o);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,o)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function c(e,t){if(null==e)return{};var a,o,n=function(e,t){if(null==e)return{};var a,o,n={},r=Object.keys(e);for(o=0;o<r.length;o++)a=r[o],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(o=0;o<r.length;o++)a=r[o],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var s=n.a.createContext({}),d=function(e){var t=n.a.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):l(l({},t),e)),a},b=function(e){var t=d(e.components);return n.a.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.a.createElement(n.a.Fragment,{},t)}},m=n.a.forwardRef((function(e,t){var a=e.components,o=e.mdxType,r=e.originalType,i=e.parentName,s=c(e,["components","mdxType","originalType","parentName"]),b=d(a),m=o,h=b["".concat(i,".").concat(m)]||b[m]||u[m]||r;return a?n.a.createElement(h,l(l({ref:t},s),{},{components:a})):n.a.createElement(h,l({ref:t},s))}));function h(e,t){var a=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var r=a.length,i=new Array(r);i[0]=m;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l.mdxType="string"==typeof e?e:o,i[1]=l;for(var s=2;s<r;s++)i[s]=a[s];return n.a.createElement.apply(null,i)}return n.a.createElement.apply(null,a)}m.displayName="MDXCreateElement"}}]);