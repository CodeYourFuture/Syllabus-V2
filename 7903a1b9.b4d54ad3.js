(window.webpackJsonp=window.webpackJsonp||[]).push([[85],{159:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return s})),n.d(t,"metadata",(function(){return l})),n.d(t,"toc",(function(){return c})),n.d(t,"default",(function(){return u}));var a=n(3),r=n(7),i=(n(0),n(257)),o=n(258),s={id:"lesson",title:"JavaScript Core I - 1",sidebar_label:"Lesson"},l={unversionedId:"js-core-1/week-1/lesson",id:"js-core-1/week-1/lesson",isDocsHomePage:!1,title:"JavaScript Core I - 1",description:"Contents",source:"@site/docs/js-core-1/week-1/lesson.md",slug:"/js-core-1/week-1/lesson",permalink:"/js-core-1/week-1/lesson",editUrl:"https://github.com/CodeYourFuture/Syllabus-V2/edit/master/docs/js-core-1/week-1/lesson.md",version:"current",sidebar_label:"Lesson",sidebar:"JavaScriptCore1",previous:{title:"Preparation",permalink:"/js-core-1/preparation"},next:{title:"Coursework",permalink:"/js-core-1/week-1/homework"}},c=[{value:"Contents",id:"contents",children:[]},{value:"Learning Objectives",id:"learning-objectives",children:[]},{value:"Before you start",id:"before-you-start",children:[]},{value:"Prerequisites",id:"prerequisites",children:[]},{value:"Hello World",id:"hello-world",children:[{value:"Exercise (10 minutes)",id:"exercise-10-minutes",children:[]},{value:"Exercise (5 minutes)",id:"exercise-5-minutes",children:[]}]},{value:"Variables",id:"variables",children:[{value:"Exercise (5 minutes)",id:"exercise-5-minutes-1",children:[]}]},{value:"Strings",id:"strings",children:[{value:"Exercise (5 minutes)",id:"exercise-5-minutes-2",children:[]}]},{value:"String concatenation",id:"string-concatenation",children:[{value:"Exercise (5 mins)",id:"exercise-5-mins",children:[]}]},{value:"Numbers as integers",id:"numbers-as-integers",children:[{value:"Exercise (10 mins)",id:"exercise-10-mins",children:[]}]},{value:"Numbers as decimals",id:"numbers-as-decimals",children:[{value:"Exercise (5 mins)",id:"exercise-5-mins-1",children:[]},{value:"Extra Exercise (10 minutes)",id:"extra-exercise-10-minutes",children:[]}]},{value:"Functions",id:"functions",children:[{value:"Exercise (20 minutes)",id:"exercise-20-minutes",children:[]},{value:"Exercise (10 minutes)",id:"exercise-10-minutes-1",children:[]}]},{value:"Calling functions inside functions",id:"calling-functions-inside-functions",children:[{value:"Exercise (20 mins)",id:"exercise-20-mins",children:[]}]},{value:"Giving Feedback to Each Other",id:"giving-feedback-to-each-other",children:[{value:"Exercise (5 minutes)",id:"exercise-5-minutes-3",children:[]}]},{value:"Glossary",id:"glossary",children:[]},{value:"Coursework",id:"coursework",children:[]},{value:"Feedback",id:"feedback",children:[]}],b={toc:c};function u(e){var t=e.components,n=Object(r.a)(e,["components"]);return Object(i.b)("wrapper",Object(a.a)({},b,n,{components:t,mdxType:"MDXLayout"}),Object(i.b)("h2",{id:"contents"},"Contents"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",Object(a.a)({parentName:"li"},{href:"#hello-world"}),"Hello World")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",Object(a.a)({parentName:"li"},{href:"#variables"}),"Variables")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",Object(a.a)({parentName:"li"},{href:"#string-concatenation"}),"String concatenation")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",Object(a.a)({parentName:"li"},{href:"#strings"}),"Strings")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",Object(a.a)({parentName:"li"},{href:"#numbers-as-integers"}),"Numbers as integers")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",Object(a.a)({parentName:"li"},{href:"#numbers-as-decimals"}),"Numbers as decimals")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",Object(a.a)({parentName:"li"},{href:"#functions"}),"Functions")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",Object(a.a)({parentName:"li"},{href:"#calling-functions-inside-functions"}),"Calling functions inside functions"))),Object(i.b)("h2",{id:"learning-objectives"},"Learning Objectives"),Object(i.b)("p",null,"By the end of this class, you should be able to:"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"Use ",Object(i.b)("inlineCode",{parentName:"li"},"console.log()")," to print information to the console"),Object(i.b)("li",{parentName:"ul"},"List and describe the different primitive data types in JS"),Object(i.b)("li",{parentName:"ul"},"Use ",Object(i.b)("inlineCode",{parentName:"li"},"typeof")," to find the type of a variable"),Object(i.b)("li",{parentName:"ul"},"Assign data to variables using ",Object(i.b)("inlineCode",{parentName:"li"},"let")," and ",Object(i.b)("inlineCode",{parentName:"li"},"const")),Object(i.b)("li",{parentName:"ul"},"Write, call and evaluate functions in JavaScript"),Object(i.b)("li",{parentName:"ul"},"Manipulate strings with concatenation and interpolation techniques"),Object(i.b)("li",{parentName:"ul"},"Manipulate numbers with mathematical operators using the ",Object(i.b)("inlineCode",{parentName:"li"},"Math")," library"),Object(i.b)("li",{parentName:"ul"},"Define the difference between ",Object(i.b)("inlineCode",{parentName:"li"},"console.log()")," and ",Object(i.b)("inlineCode",{parentName:"li"},"return")),Object(i.b)("li",{parentName:"ul"},"Call functions within functions"),Object(i.b)("li",{parentName:"ul"},"Search and read documentation to help when you are stuck"),Object(i.b)("li",{parentName:"ul"},"Use the Code Style Guide to give feedback on other students work")),Object(i.b)("hr",null),Object(i.b)("h2",{id:"before-you-start"},"Before you start"),Object(i.b)("p",null,"Before you arrive at class you ",Object(i.b)("strong",{parentName:"p"},"must")," have completed the following setup work."),Object(i.b)("p",null,Object(i.b)("a",Object(a.a)({parentName:"p"},{href:"../preparation"}),"JavaScript Preparation")),Object(i.b)("p",null,Object(i.b)("em",{parentName:"p"},"If you are a teacher reading this, please check the ",Object(i.b)("a",Object(a.a)({parentName:"em"},{href:"./instructors"}),"Instructor Notes"))),Object(i.b)("h2",{id:"prerequisites"},"Prerequisites"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},"Access to a Linux console (either on Mac, Ubuntu or by using Ubuntu WSL for Windows 10)"),Object(i.b)("li",{parentName:"ol"},"VS Code running a default Linux terminal"),Object(i.b)("li",{parentName:"ol"},"NodeJS must be installed")),Object(i.b)("p",null,"To test, you can write ",Object(i.b)("inlineCode",{parentName:"p"},"node -v")," in your terminal and you should see something like ",Object(i.b)("inlineCode",{parentName:"p"},"v11.10.0"),". If you don't see this please talk to a teacher!"),Object(i.b)("h2",{id:"hello-world"},"Hello World"),Object(i.b)("p",null,"It is programming tradition that the first thing you do in any language is make it output 'Hello world!'."),Object(i.b)("p",null,"We'll do this in JavaScript, using a command called ",Object(i.b)("inlineCode",{parentName:"p"},"console.log()"),". The ",Object(i.b)("inlineCode",{parentName:"p"},"console.log()")," method writes a message to the console."),Object(i.b)("p",null,"The console is a tool which is mainly used to log information - it's useful for testing purposes."),Object(i.b)("h3",{id:"exercise-10-minutes"},"Exercise (10 minutes)"),Object(i.b)("p",null,Object(i.b)("em",{parentName:"p"},"(This exercise will help you understand how to run a basic JS script and explore the different ways you can run JS code)")),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},"Create your first ",Object(i.b)("inlineCode",{parentName:"li"},"js1-week1.js")," script"),Object(i.b)("li",{parentName:"ol"},"Type ",Object(i.b)("inlineCode",{parentName:"li"},'console.log("Hello World!")')),Object(i.b)("li",{parentName:"ol"},"There are 2 ways you can run this script - one way is by pressing F5 in your VS Code application. Can you find out what the second way is? Pair up and use a search engine to find out! Choose your favourite method and use that from now on.")),Object(i.b)("p",null,Object(i.b)("strong",{parentName:"p"},"BONUS:")," there is a third way of running JS code (notice how I haven't said scipt) - do you know what that is?"),Object(i.b)("h3",{id:"exercise-5-minutes"},"Exercise (5 minutes)"),Object(i.b)("p",null,Object(i.b)("em",{parentName:"p"},"(This exercise will help you expand your understanding of console.log)")),Object(i.b)("p",null,"Write 10 statements like these, but in different languages."),Object(i.b)("p",null,"For example:"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{}),"Halo, dunia! // Indonesian\nCiao, mondo! // Italian\nHola, mundo! // Spanish\n")),Object(i.b)("h2",{id:"variables"},"Variables"),Object(i.b)("p",null,"When you write code, you'll want to create shortcuts to data values so you don't have to write out the same value every time."),Object(i.b)("p",null,"We can use a ",Object(i.b)("em",{parentName:"p"},"variable")," to create a reference to a value. Variables can be thought of as named containers. You can place data into these containers and then refer to the data simply by naming the container."),Object(i.b)("p",null,"Before you use a variable in a JavaScript program, you must declare it. Variables are declared with ",Object(i.b)("em",{parentName:"p"},"let")," and ",Object(i.b)("em",{parentName:"p"},"const")," keywords as follows."),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-js"}),'let greeting = "Hello world";\n\nconsole.log(greeting);\n')),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-js"}),'const name = "Irina";\n\nconsole.log(name);\n')),Object(i.b)("p",null,'The program above will print "Hello world" to the console. Notice how it uses the value assigned to the variable ',Object(i.b)("inlineCode",{parentName:"p"},"greeting"),"."),Object(i.b)("h3",{id:"exercise-5-minutes-1"},"Exercise (5 minutes)"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},"Add a variable ",Object(i.b)("inlineCode",{parentName:"li"},"greeting")," to js1-week1.js and assign a greeting of your choice to the variable"),Object(i.b)("li",{parentName:"ol"},"Print your ",Object(i.b)("inlineCode",{parentName:"li"},"greeting")," to the console 3 times. You should see your greeting 3 times on the console, one on each line.")),Object(i.b)("h2",{id:"strings"},"Strings"),Object(i.b)("p",null,"In programming there are different ",Object(i.b)("em",{parentName:"p"},"types of")," data. You've used one data type already: ",Object(i.b)("strong",{parentName:"p"},"string"),"."),Object(i.b)("p",null,"Computers recognise strings as a sequence of characters but to humans, strings are simply lines of text."),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-js"}),'const message = "This is a string";\n')),Object(i.b)("p",null,"Notice that strings are always wrapped ",Object(i.b)("strong",{parentName:"p"},"inside of quote marks"),". We do this so that the computer knows when the string starts and ends."),Object(i.b)("p",null,"You can check that the data is a string by using the ",Object(i.b)("inlineCode",{parentName:"p"},"typeof")," operator:"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-js"}),"const message = \"This is a string\";\nconst messageType = typeof message;\n\nconsole.log(messageType); // logs 'string'\n")),Object(i.b)("h3",{id:"exercise-5-minutes-2"},"Exercise (5 minutes)"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},"Write a program that:")),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"creates a variable called ",Object(i.b)("inlineCode",{parentName:"li"},"colors")),Object(i.b)("li",{parentName:"ul"},'assigns colors "blue" and "yellow" as a comma separate string to ',Object(i.b)("inlineCode",{parentName:"li"},"colors")),Object(i.b)("li",{parentName:"ul"},"logs the type ",Object(i.b)("inlineCode",{parentName:"li"},"colors")," using ",Object(i.b)("inlineCode",{parentName:"li"},"typeof"),".")),Object(i.b)("ol",{start:2},Object(i.b)("li",{parentName:"ol"},"What is the ",Object(i.b)("inlineCode",{parentName:"li"},"typeof")," a number?")),Object(i.b)("h2",{id:"string-concatenation"},"String concatenation"),Object(i.b)("p",null,"You can add two strings together using the plus operator (",Object(i.b)("inlineCode",{parentName:"p"},"+"),") or ",Object(i.b)("em",{parentName:"p"},"string interpolation"),"."),Object(i.b)("p",null,"String interpolation is a useful JavaScript feature that allows you to put variables directly into a string:"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-js"}),'// Here is an example using the plus operator to concat strings\nconst greetingStart = "Hello, my name is ";\nconst name = "Daniel";\n\nconst greeting = greetingStart + name;\n\nconsole.log(greeting); // Logs "Hello, my name is Daniel"\n')),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-js"}),'// Here is example using the String interpolation to concat strings\nconst greetingStart = "Hello";\nconst name = "Daniel";\n\nconst greeting = `${greetingStart}, my name is ${name}`;\n\nconsole.log(greeting); // Logs "Hello, my name is Daniel"\n')),Object(i.b)("h3",{id:"exercise-5-mins"},"Exercise (5 mins)"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},"Write a program that logs a message with a greeting and your name using the two concatenation methods we used")),Object(i.b)("h2",{id:"numbers-as-integers"},"Numbers as integers"),Object(i.b)("p",null,"The next data type we will learn is ",Object(i.b)("strong",{parentName:"p"},"number"),"."),Object(i.b)("p",null,"Unlike strings, numbers do not need to be wrapped in quotes."),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-js"}),"const age = 30;\n")),Object(i.b)("p",null,"You can use mathematical operators to calculate numbers:"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-js"}),"const sum = 10 + 2; // 12\nconst product = 10 * 2; // 20\nconst quotient = 10 / 2; // 5\nconst difference = 10 - 2; // 8\n")),Object(i.b)("h3",{id:"exercise-10-mins"},"Exercise (10 mins)"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},"Create two variables ",Object(i.b)("inlineCode",{parentName:"li"},"numberOfStudents")," and ",Object(i.b)("inlineCode",{parentName:"li"},"numberOfMentors")),Object(i.b)("li",{parentName:"ol"},"Log a message that displays the total number of students and mentors")),Object(i.b)("h4",{id:"expected-result"},"Expected result"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-sh"}),"Number of students: 15\nNumber of mentors: 8\nTotal number of students and mentors: 23\n")),Object(i.b)("h2",{id:"numbers-as-decimals"},"Numbers as decimals"),Object(i.b)("p",null,"Numbers can be integers (whole numbers) or floats (numbers with a decimal)."),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-js"}),"const preciseAge = 30.612437;\n")),Object(i.b)("p",null,"Numbers with decimals can be rounded to the nearest whole number using the ",Object(i.b)("inlineCode",{parentName:"p"},"Math.round")," function:"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-js"}),"const preciseAge = 30.612437;\nconst roughAge = Math.round(preciseAge); // 31\n")),Object(i.b)("h3",{id:"exercise-5-mins-1"},"Exercise (5 mins)"),Object(i.b)("p",null,"Using the variables provided in the exercise, calculate the percentage of mentors and students in the group (percentages must be a rounded to the nearest integer)"),Object(i.b)("p",null,"You should then log this number to the console."),Object(i.b)("h4",{id:"expected-result-1"},"Expected result"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-sh"}),"Percentage students: 65%\nPercentage mentors: 35%\n")),Object(i.b)("h3",{id:"extra-exercise-10-minutes"},"Extra Exercise (10 minutes)"),Object(i.b)("p",null,Object(i.b)("em",{parentName:"p"},"Intructor note: Only complete this exercise if you have enough time in the lesson")),Object(i.b)("p",null,"Using online documentation, what other things can you do with the ",Object(i.b)("inlineCode",{parentName:"p"},"Math")," library?"),Object(i.b)("p",null,"Pick one thing on your table that you can do other than ",Object(i.b)("inlineCode",{parentName:"p"},"Math.round")," and prepare an explanation for the rest of the class."),Object(i.b)("h2",{id:"functions"},"Functions"),Object(i.b)("p",null,"Functions are blocks of code that can do a task as many times as you ask them to. They take an input and return an output."),Object(i.b)("p",null,"Here's a function that doubles a number:"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-js"}),"function double(number) {\n  return number * 2;\n}\n")),Object(i.b)("p",null,"To use the function we need to:\na) ",Object(i.b)("em",{parentName:"p"},"call")," it with an input and\nb) do something with the returned value, for example assigning it to a variable"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-js"}),"const result = double(2);\n\nconsole.log(result); // 4\n")),Object(i.b)("p",null,"The input given to a function is called a ",Object(i.b)("strong",{parentName:"p"},"parameter"),"."),Object(i.b)("p",null,"A function can take more than one parameter:"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-js"}),"function add(a, b) {\n  return a + b;\n}\n")),Object(i.b)("p",null,"When you write a function (sometimes called ",Object(i.b)("em",{parentName:"p"},"declaring a function"),") you assign names to the parameters inside of the parentheses (",Object(i.b)("inlineCode",{parentName:"p"},"()"),"). Parameters can be called anything."),Object(i.b)("p",null,"This function is exactly the same as the on above:"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-js"}),"function add(num1, num2) {\n  return num1 + num2;\n}\n")),Object(i.b)("h3",{id:"exercise-20-minutes"},"Exercise (20 minutes)"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},"In pairs, design and create a function that:")),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"takes in more than one input"),Object(i.b)("li",{parentName:"ul"},"uses string concatenation"),Object(i.b)("li",{parentName:"ul"},"this means adding two strings together"),Object(i.b)("li",{parentName:"ul"},"performs some form of operation on a number"),Object(i.b)("li",{parentName:"ul"},"uses ",Object(i.b)("inlineCode",{parentName:"li"},"return")," to return a ",Object(i.b)("strong",{parentName:"li"},"string"))),Object(i.b)("ol",{start:2},Object(i.b)("li",{parentName:"ol"},"Add a comment above your function to explain what it does"),Object(i.b)("li",{parentName:"ol"},"Call your function and run your script"),Object(i.b)("li",{parentName:"ol"},"What's the difference between a ",Object(i.b)("inlineCode",{parentName:"li"},"return")," and ",Object(i.b)("inlineCode",{parentName:"li"},"console.log"),"?"),Object(i.b)("li",{parentName:"ol"},"When would you choose to use functions over the way we have been scripting so far?")),Object(i.b)("h3",{id:"exercise-10-minutes-1"},"Exercise (10 minutes)"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},"Swap your laptop with your neighbouring pair and review each other's code - what can be improved? Is the code readable?")),Object(i.b)("h2",{id:"calling-functions-inside-functions"},"Calling functions inside functions"),Object(i.b)("p",null,"Functions are very powerful."),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"You can write more than one line of code inside of functions."),Object(i.b)("li",{parentName:"ul"},"You can use variables inside of functions."),Object(i.b)("li",{parentName:"ul"},"You can call other functions inside of functions!")),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-js"}),'function getAgeInDays(age) {\n  return age * 365;\n}\n\nfunction createGreeting(name, age) {\n  const ageInDays = getAgeInDays(age);\n  const message =\n    "My Name is " + name + " and I was born over " + ageInDays + " days ago!";\n  return message;\n}\n')),Object(i.b)("h3",{id:"exercise-20-mins"},"Exercise (20 mins)"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},"Write a function that returns the year someone is born given their age as input"),Object(i.b)("li",{parentName:"ol"},"Using the answer from step 1, write a function that takes someone's name and age as input and returns a string that states the person's name and year they were born in a sentence")),Object(i.b)("h2",{id:"giving-feedback-to-each-other"},"Giving Feedback to Each Other"),Object(i.b)("p",null,"A critical part of being developer is reading other people's code and giving good feedback and improvements. This can happen even when you don't know a lot of code - everybody has unique ideas and insights into how to make code better!"),Object(i.b)("p",null,"Let's spend the next five minutes reviewing CodeYourFuture's Style Guide."),Object(i.b)("p",null,"This style guide is how we expect you to write code whilst you're at CodeYourFuture - most companies have one and it's really important you stick to it to make sure we all write code that other people can understand."),Object(i.b)("p",null,Object(i.b)("a",Object(a.a)({parentName:"p"},{href:"https://syllabus.codeyourfuture.io/guides/code-style-guide"}),"https://syllabus.codeyourfuture.io/guides/code-style-guide")),Object(i.b)("div",{className:"admonition admonition-tip alert alert--success"},Object(i.b)("div",Object(a.a)({parentName:"div"},{className:"admonition-heading"}),Object(i.b)("h5",{parentName:"div"},Object(i.b)("span",Object(a.a)({parentName:"h5"},{className:"admonition-icon"}),Object(i.b)("svg",Object(a.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"}),Object(i.b)("path",Object(a.a)({parentName:"svg"},{fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"})))),"tip")),Object(i.b)("div",Object(a.a)({parentName:"div"},{className:"admonition-content"}),Object(i.b)("p",{parentName:"div"},"A style guide doesn't change anything about how your code operates - code that breaks these rules will still work. However it's important so that ",Object(i.b)("strong",{parentName:"p"},"other people")," can more easily read your code."))),Object(i.b)("h3",{id:"exercise-5-minutes-3"},"Exercise (5 minutes)"),Object(i.b)("p",null,Object(i.b)("em",{parentName:"p"},"This is a Live exercise. The Teacher should take suggestions from the class on how this code can be improved and add comments themselves. Please read the ",Object(i.b)("a",Object(a.a)({parentName:"em"},{href:"./instructors#giving-feedback-to-each-other"}),"teaching notes"),".")),Object(i.b)("p",null,"Next, let's see an example of some code that we could suggest some improvements to."),Object(i.b)("p",null,Object(i.b)("a",Object(a.a)({parentName:"p"},{href:"https://github.com/CodeYourFuture/BadCodeExample/pull/1"}),"https://github.com/CodeYourFuture/BadCodeExample/pull/1")),Object(i.b)("p",null,"Using what you've just read in the Style Guide."),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"What improvements could we suggest on the code?"),Object(i.b)("li",{parentName:"ul"},"Are there any other improvement we could suggest that aren't in the Style Guide?")),Object(i.b)("h2",{id:"glossary"},"Glossary"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"Console: a place on your computer to run scripts or commands from"),Object(i.b)("li",{parentName:"ul"},"Command: something that you type on your computer which performs an operation that your computer does"),Object(i.b)("li",{parentName:"ul"},'Directory: another word for "folder" on your computer'),Object(i.b)("li",{parentName:"ul"},"Parameter: a placeholder for values you can pass into functions"),Object(i.b)("li",{parentName:"ul"},"Primitive type: a built-in type in JavaScript (e.g. strings and numbers are primitive types in JavaScript)"),Object(i.b)("li",{parentName:"ul"},"Script: a file that contains a program"),Object(i.b)("li",{parentName:"ul"},'Terminal: another word for "console"')),Object(i.b)("h2",{id:"coursework"},"Coursework"),Object(i.b)("p",null,"Click ",Object(i.b)("a",Object(a.a)({parentName:"p"},{href:"./homework"}),"here")," to view the homework for this lesson."),Object(i.b)("h2",{id:"feedback"},"Feedback"),Object(i.b)("p",null,"Please spend two minutes reviewing this lesson to help us improve it for the future. This feedback will be shared with volunteers."),Object(i.b)(o.a,{module:"JavaScript Core 1",week:"Week 1",mdxType:"Feedback"}))}u.isMDXComponent=!0},257:function(e,t,n){"use strict";n.d(t,"a",(function(){return u})),n.d(t,"b",(function(){return d}));var a=n(0),r=n.n(a);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var c=r.a.createContext({}),b=function(e){var t=r.a.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},u=function(e){var t=b(e.components);return r.a.createElement(c.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},m=r.a.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,o=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),u=b(n),m=a,d=u["".concat(o,".").concat(m)]||u[m]||p[m]||i;return n?r.a.createElement(d,s(s({ref:t},c),{},{components:n})):r.a.createElement(d,s({ref:t},c))}));function d(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=m;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:a,o[1]=s;for(var c=2;c<i;c++)o[c]=n[c];return r.a.createElement.apply(null,o)}return r.a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},258:function(e,t,n){"use strict";n.d(t,"a",(function(){return i}));var a=n(0),r=n.n(a);n(56);function i(e){var t="https://docs.google.com/forms/d/e/1FAIpQLScq8Zgr0pz7aMDj0D768eCpW798XgtDsKfpA6BquqK5Hdtj4A/viewform?embedded=true&entry.1672476057="+e.module.replace(" ","+")+"&entry.74981796="+e.week.replace(" ","+");return r.a.createElement("div",{className:"feedback"},r.a.createElement("div",{className:"feedback__wrapper"},r.a.createElement("iframe",{src:t,width:"640",height:"640",frameborder:"0",marginheight:"0",marginwidth:"0"},"Loading\u2026"),r.a.createElement("center",null,r.a.createElement("p",null,"Not loading? Form can be found"," ",r.a.createElement("a",{target:"_blank",href:t},"here"),". Click"," ",r.a.createElement("a",{target:"_blank",href:"https://docs.google.com/forms/d/1F2mB10japkHAPb3H-9Q4YrYH0i61GoMG1tk-P4ZT808/edit"},"here")," ","to get edit access."))))}}}]);