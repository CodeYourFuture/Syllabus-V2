(window.webpackJsonp=window.webpackJsonp||[]).push([[18],{258:function(e,n,t){"use strict";t.d(n,"a",(function(){return d})),t.d(n,"b",(function(){return p}));var o=t(0),a=t.n(o);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);n&&(o=o.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,o)}return t}function s(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function c(e,n){if(null==e)return{};var t,o,a=function(e,n){if(null==e)return{};var t,o,a={},r=Object.keys(e);for(o=0;o<r.length;o++)t=r[o],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(o=0;o<r.length;o++)t=r[o],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var l=a.a.createContext({}),b=function(e){var n=a.a.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):s(s({},n),e)),t},d=function(e){var n=b(e.components);return a.a.createElement(l.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return a.a.createElement(a.a.Fragment,{},n)}},h=a.a.forwardRef((function(e,n){var t=e.components,o=e.mdxType,r=e.originalType,i=e.parentName,l=c(e,["components","mdxType","originalType","parentName"]),d=b(t),h=o,p=d["".concat(i,".").concat(h)]||d[h]||u[h]||r;return t?a.a.createElement(p,s(s({ref:n},l),{},{components:t})):a.a.createElement(p,s({ref:n},l))}));function p(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var r=t.length,i=new Array(r);i[0]=h;var s={};for(var c in n)hasOwnProperty.call(n,c)&&(s[c]=n[c]);s.originalType=e,s.mdxType="string"==typeof e?e:o,i[1]=s;for(var l=2;l<r;l++)i[l]=t[l];return a.a.createElement.apply(null,i)}return a.a.createElement.apply(null,t)}h.displayName="MDXCreateElement"},84:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",(function(){return i})),t.d(n,"metadata",(function(){return s})),t.d(n,"toc",(function(){return c})),t.d(n,"default",(function(){return b}));var o=t(3),a=t(7),r=(t(0),t(258)),i={id:"this-keyword",title:"The 'this' Keyword",sidebar_label:"The 'this' Keyword"},s={unversionedId:"js-core-3/other/this-keyword",id:"js-core-3/other/this-keyword",isDocsHomePage:!1,title:"The 'this' Keyword",description:"One aspect of JavaScript that often leads to confusion is the keyword this. Its value depends on where it is used and how that function is called.",source:"@site/docs/js-core-3/other/this-keyword.md",slug:"/js-core-3/other/this-keyword",permalink:"/js-core-3/other/this-keyword",editUrl:"https://github.com/CodeYourFuture/Syllabus-V2/edit/master/docs/js-core-3/other/this-keyword.md",version:"current",sidebar_label:"The 'this' Keyword",sidebar:"JavaScriptCore3",previous:{title:"JavaScript Classes",permalink:"/js-core-3/other/javascript-classes"}},c=[{value:"<code>this</code> in a constructor",id:"this-in-a-constructor",children:[]},{value:"<code>this</code> in a method",id:"this-in-a-method",children:[]},{value:"<code>this</code> in a function",id:"this-in-a-function",children:[]},{value:"methods called as functions",id:"methods-called-as-functions",children:[]},{value:"arrow functions to the rescue",id:"arrow-functions-to-the-rescue",children:[]},{value:"Exercises",id:"exercises",children:[]}],l={toc:c};function b(e){var n=e.components,t=Object(a.a)(e,["components"]);return Object(r.b)("wrapper",Object(o.a)({},l,t,{components:n,mdxType:"MDXLayout"}),Object(r.b)("p",null,"One aspect of JavaScript that often leads to confusion is the keyword ",Object(r.b)("inlineCode",{parentName:"p"},"this"),". Its value depends on where it is used and how that function is called."),Object(r.b)("h3",{id:"this-in-a-constructor"},Object(r.b)("inlineCode",{parentName:"h3"},"this")," in a constructor"),Object(r.b)("p",null,"We saw previously that a ",Object(r.b)("inlineCode",{parentName:"p"},"constructor")," in a ",Object(r.b)("inlineCode",{parentName:"p"},"class")," is a special method which is used to instantiate on a new object. When used inside a ",Object(r.b)("inlineCode",{parentName:"p"},"constructor"),", ",Object(r.b)("inlineCode",{parentName:"p"},"this")," refers to the new object being created."),Object(r.b)("pre",null,Object(r.b)("code",Object(o.a)({parentName:"pre"},{className:"language-js"}),'class Person {\n  constructor() {\n    console.log(this);\n    this.name = "Mike";\n  }\n}\n\nconst person = new Person();\n')),Object(r.b)("h3",{id:"this-in-a-method"},Object(r.b)("inlineCode",{parentName:"h3"},"this")," in a method"),Object(r.b)("p",null,"A method is a function that belongs to an object. That object can be either be created as an object literal or using a class."),Object(r.b)("pre",null,Object(r.b)("code",Object(o.a)({parentName:"pre"},{className:"language-js"}),'class Person {\n  constructor() {\n    this.name = "Mike";\n  }\n\n  sayHi() {\n    console.log(`Hi, ${this.name}`);\n  }\n}\n\nconst person = new Person();\nperson.sayHi();\n')),Object(r.b)("p",null,"In both above example ",Object(r.b)("inlineCode",{parentName:"p"},"sayHi")," is a method which belong to ",Object(r.b)("inlineCode",{parentName:"p"},"person"),"."),Object(r.b)("p",null,"When a method is called, the value of ",Object(r.b)("inlineCode",{parentName:"p"},"this")," inside of that method will be the object that the method belongs to. In the example above that will be ",Object(r.b)("inlineCode",{parentName:"p"},"person"),"."),Object(r.b)("h3",{id:"this-in-a-function"},Object(r.b)("inlineCode",{parentName:"h3"},"this")," in a function"),Object(r.b)("p",null,"The value of ",Object(r.b)("inlineCode",{parentName:"p"},"this")," in a standalone function if it's executed in the browser will be the ",Object(r.b)("inlineCode",{parentName:"p"},"window")," object. If it is executed in Node it will be the ",Object(r.b)("inlineCode",{parentName:"p"},"global")," object."),Object(r.b)("pre",null,Object(r.b)("code",Object(o.a)({parentName:"pre"},{className:"language-js"}),"function sayHey() {\n  console.log(this);\n}\n\nsayHey();\n")),Object(r.b)("h3",{id:"methods-called-as-functions"},"methods called as functions"),Object(r.b)("p",null,"We can take a method and assign it to a variable. Essentially that turns it from being a method into a standalone function."),Object(r.b)("pre",null,Object(r.b)("code",Object(o.a)({parentName:"pre"},{className:"language-js"}),"class Person {\n  constructor() {\n    this.name = \"Mike\";\n  }\n\n  sayHi() {\n    console.log(`Hi, ${this.name}`);\n  }\n}\n\nconst person = new Person();\nconst sayHi = person.sayHi;\n\nsayHi(); // TypeError: Cannot read property 'name' of undefined\n")),Object(r.b)("p",null,"In above example, we are executing ",Object(r.b)("inlineCode",{parentName:"p"},"sayHi")," as a function, not method. As a result we no longer have access to the object the method belongs to. That results in the value of ",Object(r.b)("inlineCode",{parentName:"p"},"this")," being lost and instead of being ",Object(r.b)("inlineCode",{parentName:"p"},"person")," it is now ",Object(r.b)("inlineCode",{parentName:"p"},"undefined"),"."),Object(r.b)("p",null,"That can be a problem. Fortunately we can fix it"),Object(r.b)("h3",{id:"arrow-functions-to-the-rescue"},"arrow functions to the rescue"),Object(r.b)("p",null,"Latest versions of JavaScript allow us to declare methods in classes using arrow functions. When an arrow function is used, the value of ",Object(r.b)("inlineCode",{parentName:"p"},"this")," inside it is bound to the object it belongs to. That allows us to call methods as functions without losing the value of ",Object(r.b)("inlineCode",{parentName:"p"},"this")," inside it."),Object(r.b)("pre",null,Object(r.b)("code",Object(o.a)({parentName:"pre"},{className:"language-js"}),'class Person {\n  constructor() {\n    this.name = "Mike";\n  }\n\n  sayHi = () => {\n    console.log(`Hi, ${this.name}`);\n  };\n}\n\nconst person = new Person();\nconst sayHi = person.sayHi;\n\nsayHi(); // Hi, Mike\n')),Object(r.b)("p",null,"This behaviour will become important in the near future, when we will need to start passing methods to be called other parts of our code."),Object(r.b)("h3",{id:"exercises"},"Exercises"),Object(r.b)("p",null,"In break out groups solve the following exercises. Only run code to verify answers. Try to understand what each line of code is doing and the effect it has."),Object(r.b)("pre",null,Object(r.b)("code",Object(o.a)({parentName:"pre"},{className:"language-js"}),"// Exercise 1\nclass Car {\n  goFaster() {\n    this.speed = 100; // what is the value of this code below is run\n  }\n}\n\nconst ferrari = new Car();\nferrari.goFaster();\n\n// Exercise 2\nclass Car {\n  goFaster() {\n    this.speed = 100; // what is the value of this code below is run\n  }\n}\n\nconst honda = new Car();\nconst quicker = honda.goFaster;\n\nquicker();\n\n// Exercise 3\n\n// How can we fix the bug above? Why do have a problem and how does your solution fix it?\n")))}b.isMDXComponent=!0}}]);