(window.webpackJsonp=window.webpackJsonp||[]).push([[169],{245:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return i})),n.d(t,"metadata",(function(){return l})),n.d(t,"toc",(function(){return c})),n.d(t,"default",(function(){return u}));var r=n(3),a=n(8),o=(n(0),n(269)),i={},l={unversionedId:"js-core-2/mentor-guide",id:"js-core-2/mentor-guide",isDocsHomePage:!1,title:"mentor-guide",description:"possible solutions + variants (with/without for loops)",source:"@site/docs/js-core-2/mentor-guide.md",slug:"/js-core-2/mentor-guide",permalink:"/js-core-2/mentor-guide",editUrl:"https://github.com/CodeYourFuture/Syllabus-V2/edit/master/docs/js-core-2/mentor-guide.md",version:"current"},c=[{value:"iterating and printing off an object",id:"iterating-and-printing-off-an-object",children:[]},{value:"More advanced working with objects",id:"more-advanced-working-with-objects",children:[]}],s={toc:c};function u(e){var t=e.components,n=Object(a.a)(e,["components"]);return Object(o.b)("wrapper",Object(r.a)({},s,n,{components:t,mdxType:"MDXLayout"}),Object(o.b)("h1",{id:"possible-solutions--variants-withwithout-for-loops"},"possible solutions + variants (with/without ",Object(o.b)("inlineCode",{parentName:"h1"},"for")," loops)"),Object(o.b)("h2",{id:"iterating-and-printing-off-an-object"},"iterating and printing off an object"),Object(o.b)("p",null,'Exercise Write a function "printProperties" that takes an object and prints its\nproperties'),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-js"},'// with for loop\nfunction printProperties(trainee) {\n  var properties = [];\n  for (var p of trainee) {\n    properties.push(p);\n  }\n  console.log(properties.join(","));\n}\n\n// without for loop\nfunction printProperties(trainee) {\n  var properties = Object.keys(trainee);\n  console.log(properties.join(","));\n}\n')),Object(o.b)("p",null,"Write a function called hasProperty that takes an object and a property. The\nfunction should return true if the property exists,false if it doesn't."),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-js"},"// with for loop\nfunction hasProperty(trainee, propertyName) {\n  for (var p of trainee) {\n    if (p === propertyName) {\n      return true;\n    }\n  }\n  return false;\n}\n\n// without for loop\nfunction hasProperty(trainee, propertyName) {\n  Object.keys(trainee).some(function (p) {\n    return p === propertyName;\n  });\n}\n\n// shortcut/lazy way (js already has a method like this)\nfunction hasProperty(trainee, propertyName) {\n  return trainee.hasOwnProperty(propertyName);\n}\n")),Object(o.b)("p",null,"Write a function called printObject that takes an object and iterates through\nall its properties and prints a string formatted property: value Bonus point if\nyou can format the list of interests properly"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-js"},'// with for loop (and not handling array property (interests)\nfunction printObject(trainee) {\n  var result = []\n  for (var p of trainee) {\n    result.push(`${p} is ${trainee[p]}`)\n  }\n  console.log(result.join("\\n"))\n}\n\n// with for loop, handling array values\nfunction printObject(trainee) {\n  var result = []\n  for (var p of trainee) {\n    if (Array.isArray(trainee[p])) {\n      result.push(`${p} are ${trainee[p].join(",")}`)\n    } else {\n      result.push(`${p} is ${trainee[p]}`)\n    }\n  }\n  console.log(result.join("\\n"))\n}\n\n// without for loop, handling array values\n// could be more concise with a ternary, this seemed easier to read/parse\nfunction printObject(trainee) {\n  var result = Object.keys(trainee).map(function (p) {\n    if (Array.isArray(trainee[p]) {\n      return `${p} are ${trainee[p].join(",")}`;\n    } else {\n      return `${p} is ${trainee[p]}`\n    }\n  })\n  console.log(result.join("\\n"))\n}\n')),Object(o.b)("h2",{id:"more-advanced-working-with-objects"},"More advanced working with objects"),Object(o.b)("p",null,"Notes:"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"examples here are done on with the most straightforwar/simplest way possible\n",Object(o.b)("em",{parentName:"li"},"first")," - if you were to write ",Object(o.b)("inlineCode",{parentName:"li"},"sumWallet")," as dynamic for different note\ndenominations on the first attempt, you'd basically have finished the entire\nsection."),Object(o.b)("li",{parentName:"ul"},"they are also using ",Object(o.b)("inlineCode",{parentName:"li"},"forEach")," and mutations in favour of ",Object(o.b)("inlineCode",{parentName:"li"},"reduce")," in order to\nkeep it simple. feel free to demonstrate a solution using reduce if you feel\nit's appropriate.")),Object(o.b)("p",null,"Write a function that takes in the wallet as an argument, and returns the total\nmoney in the wallet."),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-js"},"// quotes or no quotes will work for these keys\nfunction sumWallet(wallet) {\n  var total = 0;\n  total += wallet[5];\n  total += wallet[10];\n  total += wallet[20];\n  return total;\n}\n")),Object(o.b)("p",null,"Write a function that takes the array ",Object(o.b)("inlineCode",{parentName:"p"},"wallets")," and returns the total amount of\nmoney for all of the wallets."),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-js"},"function sumAllWallets(walletArray) {\n  var total = 0;\n  walletArray.forEach(function (wallet) {\n    total += wallet[5];\n    total += wallet[10];\n    total += wallet[20];\n  });\n  return total;\n}\n")),Object(o.b)("p",null,"Write another function that takes the array of wallets and combines all of the\nnotes in each of them, returning a single wallet with all of the other wallets'\nnotes."),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-js"},"function combineWallets(walletArray) {\n  var resultWallet = {\n    5: 0,\n    10: 0,\n    20: 0,\n  };\n  walletArray.forEach(function (wallet) {\n    resultWallet[5] += wallet[5];\n    resultWallet[10] += wallet[10];\n    resultWallet[20] += wallet[20];\n  });\n  return resultWallet;\n}\n")),Object(o.b)("p",null,"See if you can write a function that will sum up and return the total amount in\na single wallet, but it could have any denomination of notes inside it (\xa37 note\nor a \xa313 or any other number)."),Object(o.b)("p",null,"Note: we're using javascript's coercion for the ",Object(o.b)("inlineCode",{parentName:"p"},"*")," operator for our object key\n",Object(o.b)("inlineCode",{parentName:"p"},"note")," (it's a string). If that coercion fails - it will not throw and will\nresult in ",Object(o.b)("inlineCode",{parentName:"p"},"NaN")," polluting the rest of the calculation. I've decided to leave out\nany ",Object(o.b)("inlineCode",{parentName:"p"},"isNaN")," checks here to keep the example code clear."),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-js"},"function sumDynamicWallet(wallet) {\n  var total = 0;\n  Object.keys(wallet).forEach(function (note) {\n    total += note * wallet[note];\n  });\n  return total;\n}\n")),Object(o.b)("p",null,"See if you can write a function that takes in any number of wallets, which could\ncontain any denomination/type of notes inside them (each being different). Tip:\nhave a think about if you could re-use a function from a previous example..."),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-js"},"function sumDynamicWallets(walletArray) {\n  var grandTotal = 0; // could be `total`, renamed for clarity/to avoid confusion\n  walletArray.forEach(function (wallet) {\n    grandTotal += sumDynamicWallet(wallet);\n  });\n  return grandTotal;\n}\n\n// with reduce (I'd recommend showing this example if you can get to it)\nfunction sumDynamicWallets(walletArray) {\n  return walletArray.reduce(sumDynamicWalletForReduce, 0);\n}\n\n// modifying the previous example's function `sumDynamicWallet` to take a total in\n// and return a new total with the wallet total added to it\nfunction sumDynamicWalletForReduce(acc, wallet) {\n  Object.keys(wallet).forEach(function (note) {\n    acc += note * wallet[note];\n  });\n  return acc;\n}\n")))}u.isMDXComponent=!0},269:function(e,t,n){"use strict";n.d(t,"a",(function(){return p})),n.d(t,"b",(function(){return d}));var r=n(0),a=n.n(r);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=a.a.createContext({}),u=function(e){var t=a.a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},p=function(e){var t=u(e.components);return a.a.createElement(s.Provider,{value:t},e.children)},f={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},b=a.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,i=e.parentName,s=c(e,["components","mdxType","originalType","parentName"]),p=u(n),b=r,d=p["".concat(i,".").concat(b)]||p[b]||f[b]||o;return n?a.a.createElement(d,l(l({ref:t},s),{},{components:n})):a.a.createElement(d,l({ref:t},s))}));function d(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=b;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l.mdxType="string"==typeof e?e:r,i[1]=l;for(var s=2;s<o;s++)i[s]=n[s];return a.a.createElement.apply(null,i)}return a.a.createElement.apply(null,n)}b.displayName="MDXCreateElement"}}]);