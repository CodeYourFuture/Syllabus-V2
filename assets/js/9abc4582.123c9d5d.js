(window.webpackJsonp=window.webpackJsonp||[]).push([[113],{267:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",(function(){return m})),t.d(n,"metadata",(function(){return p})),t.d(n,"toc",(function(){return h})),t.d(n,"default",(function(){return v}));var a=t(3),r=t(8),s=t(0),o=t.n(s),i=t(269),l=t(270),c=t(283),b=t(284);t(189);function d(e){var n=e.password,t=e.children,a=Object(s.useState)(!1),r=a[0],i=a[1];return o.a.createElement("div",{className:"exercise-solutions"},r?t:o.a.createElement(u,{password:n,onCorrectPassword:function(){return i(!0)}}))}function u(e){var n=e.password,t=e.onCorrectPassword;return o.a.createElement("form",{onSubmit:function(e){e.preventDefault(),e.target.elements.solutionPassword.value===n&&t()},className:"exercise-solutions__password"},o.a.createElement("div",null,o.a.createElement("label",{htmlFor:"solutionPassword"},"Enter the password to reveal the answers:"),o.a.createElement("input",{type:"password",name:"solutionPassword",id:"solutionPassword",className:"exercise-solutions__input",placeholder:"Password"})),o.a.createElement("button",{className:"button button--outline button--info exercise-solutions__submit"},"Submit"))}var m={id:"lesson",title:"JavaScript Core II - 1",sidebar_label:"Lesson"},p={unversionedId:"js-core-2/week-1/lesson",id:"js-core-2/week-1/lesson",isDocsHomePage:!1,title:"JavaScript Core II - 1",description:"Contents",source:"@site/docs/js-core-2/week-1/lesson.md",slug:"/js-core-2/week-1/lesson",permalink:"/js-core-2/week-1/lesson",editUrl:"https://github.com/CodeYourFuture/Syllabus-V2/edit/master/docs/js-core-2/week-1/lesson.md",version:"current",sidebar_label:"Lesson",sidebar:"JavaScriptCore2",previous:{title:"Module Coordinator",permalink:"/js-core-2/coordinator"},next:{title:"Coursework",permalink:"/js-core-2/week-1/homework"}},h=[{value:"Contents",id:"contents",children:[]},{value:"Learning Objectives",id:"learning-objectives",children:[]},{value:"Objects",id:"objects",children:[{value:"Exercise (1)",id:"exercise-1",children:[]},{value:"Exercise (2)",id:"exercise-2",children:[]},{value:"Exercise (3)",id:"exercise-3",children:[]},{value:"Exercise (4)",id:"exercise-4",children:[]}]},{value:"Objects Get and Set",id:"objects-get-and-set",children:[{value:"Getting the value of an object&#39;s property",id:"getting-the-value-of-an-objects-property",children:[]},{value:"Setting the value of a property",id:"setting-the-value-of-a-property",children:[]}]},{value:"More Complex Objects",id:"more-complex-objects",children:[{value:"Exercise (1)",id:"exercise-1-3",children:[]},{value:"Exercise (2)",id:"exercise-2-3",children:[]},{value:"Exercise (3)",id:"exercise-3-1",children:[]}]},{value:"Object Methods",id:"object-methods",children:[{value:"Exercise (1)",id:"exercise-1-4",children:[]},{value:"Exercise (2)",id:"exercise-2-4",children:[]},{value:"Exercise (3)",id:"exercise-3-2",children:[]},{value:"Exercise (4)",id:"exercise-4-1",children:[]},{value:"Exercise (5)",id:"exercise-5",children:[]}]},{value:"Arrays of objects",id:"arrays-of-objects",children:[{value:"Exercise (1)",id:"exercise-1-5",children:[]},{value:"Exercise (2)",id:"exercise-2-5",children:[]},{value:"Exercise (3)",id:"exercise-3-3",children:[]}]},{value:"Object built-in methods",id:"object-built-in-methods",children:[{value:"Object.keys()",id:"objectkeys",children:[]},{value:"Object.values()",id:"objectvalues",children:[]},{value:"Exercise (1)",id:"exercise-1-6",children:[]},{value:"Exercise (2)",id:"exercise-2-6",children:[]},{value:"Exercise (3)",id:"exercise-3-4",children:[]}]},{value:"Loop through an Object",id:"loop-through-an-object",children:[{value:"Use <code>for...in</code> statement",id:"use-forin-statement",children:[]},{value:"Convert object into an array and loop through the array",id:"convert-object-into-an-array-and-loop-through-the-array",children:[]}]},{value:"Coursework",id:"coursework",children:[]},{value:"Feedback",id:"feedback",children:[]}],O={toc:h};function v(e){var n=e.components,t=Object(r.a)(e,["components"]);return Object(i.b)("wrapper",Object(a.a)({},O,t,{components:n,mdxType:"MDXLayout"}),Object(i.b)("h2",{id:"contents"},"Contents"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",{parentName:"li",href:"#objects"},"Objects")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",{parentName:"li",href:"#objects-get-and-set"},"Objects Get and Set")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",{parentName:"li",href:"#more-complex-objects"},"More complex objects")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",{parentName:"li",href:"#object-methods"},"Object methods")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",{parentName:"li",href:"#arrays-of-objects"},"Arrays of Objects")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",{parentName:"li",href:"#object-built-in-methods"},"Object built-in methods")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",{parentName:"li",href:"#loop-through-an-object"},"Loop through an object"))),Object(i.b)("hr",null),Object(i.b)("h2",{id:"learning-objectives"},"Learning Objectives"),Object(i.b)("p",null,"By the end of this lesson trainees should be able to:"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"Define what an object is in JavaScript"),Object(i.b)("li",{parentName:"ul"},"Be able to write code that can use an object to store data"),Object(i.b)("li",{parentName:"ul"},"Be able to write code that changes the properties of an object"),Object(i.b)("li",{parentName:"ul"},"Be able to write code that can retrieve data from an object"),Object(i.b)("li",{parentName:"ul"},"Write and call methods inside JavaScript objects"),Object(i.b)("li",{parentName:"ul"},"Use Objects when contained inside an array"),Object(i.b)("li",{parentName:"ul"},"Write code that uses objects built-in methods"),Object(i.b)("li",{parentName:"ul"},"Write code that can iterate through an object")),Object(i.b)("hr",null),Object(i.b)("h2",{id:"objects"},"Objects"),Object(i.b)("p",null,"Objects in the real world have properties that describe how they are unique. Your laptop, for example, has a brand (Lenovo/Apple etc.), a screen size (13/15 inch), RAM (8/16GB) etc."),Object(i.b)("p",null,"How would we describe the above laptop as a JavaScript object?"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-js"},'let laptop = {\n  brand: "Lenovo",\n  screenSize: 13,\n  isTouchscreen: true,\n};\n')),Object(i.b)("h3",{id:"exercise-1"},"Exercise (1)"),Object(i.b)(c.a,{defaultValue:"exercise",values:[{label:"Exercise",value:"exercise"},{label:"Solution",value:"solution"}],mdxType:"Tabs"},Object(i.b)(b.a,{value:"exercise",mdxType:"TabItem"},Object(i.b)("div",{className:"admonition admonition-tip alert alert--success"},Object(i.b)("div",{parentName:"div",className:"admonition-heading"},Object(i.b)("h5",{parentName:"div"},Object(i.b)("span",{parentName:"h5",className:"admonition-icon"},Object(i.b)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},Object(i.b)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Exercise")),Object(i.b)("div",{parentName:"div",className:"admonition-content"},Object(i.b)("p",{parentName:"div"},"Describe your own laptop as a JavaScript object. Try to think of as many properties as you can!"),Object(i.b)("p",{parentName:"div"},"Example:"),Object(i.b)("pre",{parentName:"div"},Object(i.b)("code",{parentName:"pre",className:"language-js"},'let laptop = {\n  brand: "Lenovo",\n  screenSize: 13,\n  isTouchscreen: true,\n};\n'))))),Object(i.b)(b.a,{value:"solution",mdxType:"TabItem"},Object(i.b)(d,{password:"password",mdxType:"ExerciseSolutions"},Object(i.b)("p",null,"The solution to this depends on your laptop! Here's an example:"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-js"},'let laptop = {\n  brand: "Apple",\n  model: "MacBook Pro",\n  screenSize: 13,\n};\n\nconsole.log(laptop);\n'))))),Object(i.b)("h3",{id:"exercise-2"},"Exercise (2)"),Object(i.b)("div",{className:"admonition admonition-tip alert alert--success"},Object(i.b)("div",{parentName:"div",className:"admonition-heading"},Object(i.b)("h5",{parentName:"div"},Object(i.b)("span",{parentName:"h5",className:"admonition-icon"},Object(i.b)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},Object(i.b)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Exercise")),Object(i.b)("div",{parentName:"div",className:"admonition-content"},Object(i.b)("p",{parentName:"div"},'Think of 5 different real world "things" that you can describe with a JavaScript object\nAssign each of them to a separate variable'),Object(i.b)("p",{parentName:"div"},"Example:"),Object(i.b)("pre",{parentName:"div"},Object(i.b)("code",{parentName:"pre",className:"language-js"},'let jumper = {\n  color: "blue",\n  isCotton: true,\n};\n')))),Object(i.b)("h3",{id:"exercise-3"},"Exercise (3)"),Object(i.b)("div",{className:"admonition admonition-tip alert alert--success"},Object(i.b)("div",{parentName:"div",className:"admonition-heading"},Object(i.b)("h5",{parentName:"div"},Object(i.b)("span",{parentName:"h5",className:"admonition-icon"},Object(i.b)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},Object(i.b)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Exercise")),Object(i.b)("div",{parentName:"div",className:"admonition-content"},Object(i.b)("p",{parentName:"div"},"The objects below have some syntax issues - try and fix them all!"),Object(i.b)("pre",{parentName:"div"},Object(i.b)("code",{parentName:"pre",className:"language-js"},'\n\nlet kitten = {\n    fur colour: "orange",\n    age "23"\n};\n\nlet laptop =\n    brand: "Lenovo"\n    ram "5GB"\n}\n\nlet phone = {\n    operating system "iOS",\n    hasStylus: true,\n    megapixels 12\n    "batteryLife": "24 hours"\n')),Object(i.b)("p",{parentName:"div"},"Useful words to remember when talking about objects:"),Object(i.b)("ul",{parentName:"div"},Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"object literal"),": anything that has a set of ",Object(i.b)("inlineCode",{parentName:"li"},"{...}")," around a set of properties is an object literal"),Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"property")," or ",Object(i.b)("strong",{parentName:"li"},"key"),": ",Object(i.b)("inlineCode",{parentName:"li"},"brand"),", ",Object(i.b)("inlineCode",{parentName:"li"},"screenSize")," and ",Object(i.b)("inlineCode",{parentName:"li"},"isTouchScreen")," are properties/keys of the object"),Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"values"),": ",Object(i.b)("inlineCode",{parentName:"li"},'"Lenovo"'),", ",Object(i.b)("inlineCode",{parentName:"li"},"13")," and ",Object(i.b)("inlineCode",{parentName:"li"},"true")," are values of the object's properties")))),Object(i.b)("h3",{id:"exercise-4"},"Exercise (4)"),Object(i.b)("div",{className:"admonition admonition-tip alert alert--success"},Object(i.b)("div",{parentName:"div",className:"admonition-heading"},Object(i.b)("h5",{parentName:"div"},Object(i.b)("span",{parentName:"h5",className:"admonition-icon"},Object(i.b)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},Object(i.b)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Exercise")),Object(i.b)("div",{parentName:"div",className:"admonition-content"},Object(i.b)("p",{parentName:"div"},"Choose a few nearby colleagues and one mentor, and go through each variable you\ndeclared above in Part 1, 2 or 3, reading everything that happens out loud."),Object(i.b)("p",{parentName:"div"},"Make sure each member of your group has read at least one variable!"),Object(i.b)("p",{parentName:"div"},"Make sure you use words like:"),Object(i.b)("ul",{parentName:"div"},Object(i.b)("li",{parentName:"ul"},"object literal"),Object(i.b)("li",{parentName:"ul"},"property / key"),Object(i.b)("li",{parentName:"ul"},"value"),Object(i.b)("li",{parentName:"ul"},"string / number / boolean"),Object(i.b)("li",{parentName:"ul"},"declaring a variable"),Object(i.b)("li",{parentName:"ul"},"etc.")))),Object(i.b)("h2",{id:"objects-get-and-set"},"Objects Get and Set"),Object(i.b)("h3",{id:"getting-the-value-of-an-objects-property"},"Getting the value of an object's property"),Object(i.b)("p",null,"Let's take one of the objects we looked at earlier.."),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-js"},'let laptop = {\n  brand: "Lenovo",\n  screenSize: 13,\n  isTouchscreen: true,\n};\n')),Object(i.b)("blockquote",null,Object(i.b)("p",{parentName:"blockquote"},"Try to ",Object(i.b)("inlineCode",{parentName:"p"},"console.log(laptop)"),". The output might depend on your environment!")),Object(i.b)("p",null,"To find out the value of an object's property, you can use the dot notation.."),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-js"},"console.log(laptop.brand);\n")),Object(i.b)("p",null,"You can also use the bracket notation (although this is rarely used, it's good to know):"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-js"},'console.log(laptop["brand"]);\n')),Object(i.b)("h4",{id:"exercise-1-1"},"Exercise (1)"),Object(i.b)("p",null,'Console.log the values of each property of "kitten"'),Object(i.b)(c.a,{defaultValue:"exercise",values:[{label:"Exercise",value:"exercise"},{label:"Solution",value:"solution"}],mdxType:"Tabs"},Object(i.b)(b.a,{value:"exercise",mdxType:"TabItem"},Object(i.b)("div",{className:"admonition admonition-tip alert alert--success"},Object(i.b)("div",{parentName:"div",className:"admonition-heading"},Object(i.b)("h5",{parentName:"div"},Object(i.b)("span",{parentName:"h5",className:"admonition-icon"},Object(i.b)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},Object(i.b)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Exercise")),Object(i.b)("div",{parentName:"div",className:"admonition-content"},Object(i.b)("pre",{parentName:"div"},Object(i.b)("code",{parentName:"pre",className:"language-js"},'/*\n    Console.log the values of each property of "kitten"\n*/\n\nlet kitten = {\n  ageMonths: 3,\n  isFemale: true,\n  furColour: "brown",\n};\n'))))),Object(i.b)(b.a,{value:"solution",mdxType:"TabItem"},Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-js"},'/*\n    Console.log the values of each property of "kitten"\n*/\n\nlet kitten = {\n  ageMonths: 3,\n  isFemale: true,\n  furColour: "brown",\n};\n\n// YOUR CODE GOES BELOW HERE\nconsole.log(kitten.ageMonths);\nconsole.log(kitten.isFemale);\nconsole.log(kitten.furColour);\n\n// YOUR CODE GOES ABOVE HERE\n')))),Object(i.b)("h4",{id:"exercise-2-1"},"Exercise (2)"),Object(i.b)(c.a,{defaultValue:"exercise",values:[{label:"Exercise",value:"exercise"},{label:"Solution",value:"solution"}],mdxType:"Tabs"},Object(i.b)(b.a,{value:"exercise",mdxType:"TabItem"},Object(i.b)("div",{className:"admonition admonition-tip alert alert--success"},Object(i.b)("div",{parentName:"div",className:"admonition-heading"},Object(i.b)("h5",{parentName:"div"},Object(i.b)("span",{parentName:"h5",className:"admonition-icon"},Object(i.b)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},Object(i.b)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Exercise")),Object(i.b)("div",{parentName:"div",className:"admonition-content"},Object(i.b)("p",{parentName:"div"},"The following code contains syntax errors - try and fix them!\nOnce you fix them, run the code, it should output the correct values!"),Object(i.b)("p",{parentName:"div"},"It should output:\niPhone\n2017"),Object(i.b)("pre",{parentName:"div"},Object(i.b)("code",{parentName:"pre",className:"language-js"},"let phone = {\n  brand:'iPhone,\n  model 'iPhone X'\n  launchYear: 2017,\n  is Unlocked: true\n;\n\nlet phoneBrand = phone.brand;\nlet phoneLaunchYear = phone[\"launchYear\"];\n\nconsole.log(phoneBrand);\nconsole.log(phoneLaunchYear);\n\n"))))),Object(i.b)(b.a,{value:"solution",mdxType:"TabItem"},Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-js"},'let phone = {\n  brand: "iPhone",\n  model: "iPhone X",\n  launchYear: 2017,\n  isUnlocked: true,\n};\n\nlet phoneBrand = phone.brand;\nlet phoneLaunchYear = phone["launchYear"];\n\nconsole.log(phoneBrand);\nconsole.log(phoneLaunchYear);\n')))),Object(i.b)("h3",{id:"setting-the-value-of-a-property"},"Setting the value of a property"),Object(i.b)("p",null,"Similar to reading, if we want to set a property:"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-js"},'laptop.brand = "Apple";\n')),Object(i.b)("p",null,"It's strongly recommended you always use the same ",Object(i.b)("strong",{parentName:"p"},"type")," when re-assigning an object's property (if it was a string before, keep it a string - and so on)."),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-js"},'let laptop = {\n  brand: "Lenovo",\n  screenSize: 13,\n  isTouchscreen: true,\n};\n\n// DON\'T DO THIS\nlaptop.screenSize = "15 inch";\n\n// OK TO DO\nlaptop.screenSize = 15;\n')),Object(i.b)("h4",{id:"exercise-1-2"},"Exercise (1)"),Object(i.b)(c.a,{defaultValue:"exercise",values:[{label:"Exercise",value:"exercise"},{label:"Solution",value:"solution"}],mdxType:"Tabs"},Object(i.b)(b.a,{value:"exercise",mdxType:"TabItem"},Object(i.b)("div",{className:"admonition admonition-tip alert alert--success"},Object(i.b)("div",{parentName:"div",className:"admonition-heading"},Object(i.b)("h5",{parentName:"div"},Object(i.b)("span",{parentName:"h5",className:"admonition-icon"},Object(i.b)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},Object(i.b)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Exercise")),Object(i.b)("div",{parentName:"div",className:"admonition-content"},Object(i.b)("p",{parentName:"div"},'Write code in the space provided so that it outputs "Gilbert"'),Object(i.b)("p",{parentName:"div"},'It should output: "Gilbert"'),Object(i.b)("pre",{parentName:"div"},Object(i.b)("code",{parentName:"pre",className:"language-js"},"// WRITE CODE BELOW THIS\n\n// WRITE CODE ABOVE THIS\n\nconsole.log(kitten.name);\n"))))),Object(i.b)(b.a,{value:"solution",mdxType:"TabItem"},Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-js"},'/*\n  Write code in the space provided so that it outputs "Gilbert"\n*/\n\n// WRITE CODE BELOW THIS\nconst kitten = {\n  name: "Gilbert",\n};\n\n// WRITE CODE ABOVE THIS\n\nconsole.log(kitten.name);\n\n// -> it should output: "Gilbert"\n')))),Object(i.b)("h4",{id:"exercise-2-2"},"Exercise (2)"),Object(i.b)(c.a,{defaultValue:"exercise",values:[{label:"Exercise",value:"exercise"},{label:"Solution",value:"solution"}],mdxType:"Tabs"},Object(i.b)(b.a,{value:"exercise",mdxType:"TabItem"},Object(i.b)("div",{className:"admonition admonition-tip alert alert--success"},Object(i.b)("div",{parentName:"div",className:"admonition-heading"},Object(i.b)("h5",{parentName:"div"},Object(i.b)("span",{parentName:"h5",className:"admonition-icon"},Object(i.b)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},Object(i.b)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Exercise")),Object(i.b)("div",{parentName:"div",className:"admonition-content"},Object(i.b)("p",{parentName:"div"},"Write code in the space provided so that the expected values output"),Object(i.b)("p",{parentName:"div"},"It should output:\nRex\ntrue"),Object(i.b)("pre",{parentName:"div"},Object(i.b)("code",{parentName:"pre",className:"language-js"},'let dog = {\n  name: "Billy",\n  wantsToPlay: false,\n};\n\n// WRITE CODE BELOW THIS LINE\n\n// WRITE CODE ABOVE THIS LINE\n\nconsole.log(dog.name);\nconsole.log(dog.wantsToPlay);\n\n// -> it should output:\n// Rex\n// true\n'))))),Object(i.b)(b.a,{value:"solution",mdxType:"TabItem"},Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-js"},'/*\n  Write code in the space provided so that the expected values output\n*/\n\nlet dog = {\n  name: "Billy",\n  wantsToPlay: false,\n};\n\n// WRITE CODE BELOW THIS LINE\ndog.name = "Rex";\ndog.wantsToPlay = true;\n\n// WRITE CODE ABOVE THIS LINE\n\n//DO NOT MODIFY BELOW\nconsole.log(dog.name);\nconsole.log(dog.wantsToPlay);\n\n// it should output:\n// Rex\n// true\n')))),Object(i.b)("h2",{id:"more-complex-objects"},"More Complex Objects"),Object(i.b)("p",null,"Object properties can even be assigned other objects, arrays or variables too. The example below shows an object with keys that have been assigned a variable, an array, and an object."),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-js"},'let kittenName = "Feathers";\n\nlet kitten = {\n  name: kittenName,\n  toyCollection: ["blue ball", "green ball", "hoover box"],\n  favoriteLocation: {\n    roomName: "Living room",\n    napPlace: "window",\n    idealTemperatureCelsius: 24,\n  },\n};\n')),Object(i.b)("h3",{id:"exercise-1-3"},"Exercise (1)"),Object(i.b)(c.a,{defaultValue:"exercise",values:[{label:"Exercise",value:"exercise"},{label:"Solution",value:"solution"}],mdxType:"Tabs"},Object(i.b)(b.a,{value:"exercise",mdxType:"TabItem"},Object(i.b)("div",{className:"admonition admonition-tip alert alert--success"},Object(i.b)("div",{parentName:"div",className:"admonition-heading"},Object(i.b)("h5",{parentName:"div"},Object(i.b)("span",{parentName:"h5",className:"admonition-icon"},Object(i.b)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},Object(i.b)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Exercise")),Object(i.b)("div",{parentName:"div",className:"admonition-content"},Object(i.b)("p",{parentName:"div"},"Given the following house - follow the instructions below."),Object(i.b)("p",{parentName:"div"},"Make sure you run the file after and it outputs the correct results."),Object(i.b)("pre",{parentName:"div"},Object(i.b)("code",{parentName:"pre",className:"language-js"},'let house = {\n  address: "1 Kinning Park",\n  previousOwners: ["Claire M.", "John A."],\n  currentOwner: {\n    firstName: "Margaret",\n    lastName: "Conway",\n  },\n};\n\n/*\n  DO NOT EDIT ANYTHING ABOVE THIS LINE\n\n  WRITE YOUR CODE BELOW\n*/\n\n// - change the address of "house" to \'51 Berkley Road\'\n// - change the previous owners of "house" to ["Brian M.", "Fiona S."]\n// - change the last name of the current owner of "house" to "Montgomery"\n\n/*\n  DO NOT EDIT ANYTHING BELOW THIS LINE\n*/\n\nconsole.log(\n  `Expected result: 51 Berkley Road. Actual result: ${house.address}`\n);\nconsole.log(\n  `Expected result: Brian M., Fiona S. Actual result: ${house.previousOwners.toString()}`\n);\nconsole.log(\n  `Expected result: Montgomery. Actual result: ${house.currentOwner.lastName}`\n);\n'))))),Object(i.b)(b.a,{value:"solution",mdxType:"TabItem"},Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-js"},'/*\n  Given the following house - follow the instructions below.\n\n  Make sure you run the file after and it outputs the correct results.\n*/\n\nlet house = {\n  address: "1 Kinning Park",\n  previousOwners: ["Claire M.", "John A."],\n  currentOwner: {\n    firstName: "Margaret",\n    lastName: "Conway",\n  },\n};\n\n/*\n  DO NOT EDIT ANYTHING ABOVE THIS LINE\n\n  WRITE YOUR CODE BELOW\n*/\n\n// - change the address of "house" to "51 Berkley Road"\nhouse.address = "51 Berkley Road";\n// - change the previous owners of "house" to ["Brian M.", "Fiona S."]\nhouse.previousOwners = ["Brian M.", "Fiona S."];\n// - change the last name of the current owner of "house" to "Montgomery"\nhouse.currentOwner.lastName = "Montgomery";\n\n/*\n  DO NOT EDIT ANYTHING BELOW THIS LINE\n*/\n\nconsole.log(\n  "Expected result: 51 Berkley Road. Actual result: " + house.address\n);\nconsole.log(\n  "Expected result: Brian M., Fiona S. Actual result: " +\n    house.previousOwners.toString()\n);\nconsole.log(\n  "Expected result: Montgomery. Actual result: " + house.currentOwner.lastName\n);\n')))),Object(i.b)("h3",{id:"exercise-2-3"},"Exercise (2)"),Object(i.b)(c.a,{defaultValue:"exercise",values:[{label:"Exercise",value:"exercise"},{label:"Solution",value:"solution"}],mdxType:"Tabs"},Object(i.b)(b.a,{value:"exercise",mdxType:"TabItem"},Object(i.b)("div",{className:"admonition admonition-tip alert alert--success"},Object(i.b)("div",{parentName:"div",className:"admonition-heading"},Object(i.b)("h5",{parentName:"div"},Object(i.b)("span",{parentName:"h5",className:"admonition-icon"},Object(i.b)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},Object(i.b)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Exercise")),Object(i.b)("div",{parentName:"div",className:"admonition-content"},Object(i.b)("p",{parentName:"div"},'Given the same "house" object again'),Object(i.b)("p",{parentName:"div"},"Follow the instructions below and then run the file\nand make sure it outputs the correct results"),Object(i.b)("pre",{parentName:"div"},Object(i.b)("code",{parentName:"pre",className:"language-js"},'let house = {\n  address: "1 Kinning Park",\n  previousOwners: ["Claire M.", "John A."],\n  currentOwner: {\n    firstName: "Margaret",\n    lastName: "Conway",\n  },\n};\n\nlet newCurrentOwner = {\n  firstName: "Georgina",\n  lastName: "Hernandez",\n};\n\n/*\n  DO NOT EDIT ANYTHING ABOVE THIS LINE\n\n  WRITE YOUR CODE BELOW\n*/\n\n// - assign the value of the variable \'newCurrentOwner\' as the value to the house\'s "currentOwner"\n// - from the list of previous owners, replace only "John A." with "Stephen B."\n// - give the house a new property called \'isForSale\' with the value \'false\'\n\n/*\n  DO NOT EDIT ANYTHING BELOW THIS LINE\n*/\nconsole.log(\n  `Did you correctly assign the new owner using the given variable?","Expected result: true. Actual result: " ${\n    house.currentOwner === newCurrentOwner\n  }`\n);\nconsole.log(\n  `Expected result: Claire M., Stephen B. Actual result: ${house.previousOwners.toString()}`\n);\nconsole.log(`Expected result: false. Actual result: ${house.isForSale}`);\n'))))),Object(i.b)(b.a,{value:"solution",mdxType:"TabItem"},Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-js"},'/*\n    Given the same "house" object again\n\n    Follow the instructions below and then run the file \n    and make sure it outputs the correct results\n*/\n\nlet house = {\n  address: "1 Kinning Park",\n  previousOwners: ["Claire M.", "John A."],\n  currentOwner: {\n    firstName: "Margaret",\n    lastName: "Conway",\n  },\n};\n\nlet newCurrentOwner = {\n  firstName: "Georgina",\n  lastName: "Hernandez",\n};\n\n/*\n  DO NOT EDIT ANYTHING ABOVE THIS LINE\n\n  WRITE YOUR CODE BELOW\n*/\n\n// - assign the value of the variable \'newCurrentOwner\' as the value to the house\'s "currentOwner"\nhouse.currentOwner = newCurrentOwner;\n// - from the list of previous owners, replace only "John A." with "Stephen B."\nhouse.previousOwners[1] = "Stephen B.";\n// - give the house a new property called \'isForSale\' with the value \'false\'\nhouse.isForSale = false;\n\n/*\n  DO NOT EDIT ANYTHING BELOW THIS LINE\n*/\nconsole.log(\n  "Did you correctly assign the new owner using the given variable?",\n  `Expected result: true. Actual result: ${\n    house.currentOwner === newCurrentOwner\n  }`\n);\nconsole.log(\n  `Expected result: Claire M., Stephen B.Actual result: ${house.previousOwners.toString()}`\n);\nconsole.log(`Expected result: false.Actual result: ${house.isForSale}`);\n')))),Object(i.b)("h3",{id:"exercise-3-1"},"Exercise (3)"),Object(i.b)(c.a,{defaultValue:"exercise",values:[{label:"Exercise",value:"exercise"},{label:"Solution",value:"solution"}],mdxType:"Tabs"},Object(i.b)(b.a,{value:"exercise",mdxType:"TabItem"},Object(i.b)("div",{className:"admonition admonition-tip alert alert--success"},Object(i.b)("div",{parentName:"div",className:"admonition-heading"},Object(i.b)("h5",{parentName:"div"},Object(i.b)("span",{parentName:"h5",className:"admonition-icon"},Object(i.b)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},Object(i.b)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Exercise")),Object(i.b)("div",{parentName:"div",className:"admonition-content"},Object(i.b)("p",{parentName:"div"},'Given the same "house" object again'),Object(i.b)("p",{parentName:"div"},"Write the code for the functions as per the description above them"),Object(i.b)("pre",{parentName:"div"},Object(i.b)("code",{parentName:"pre",className:"language-js"},'let kinningParkHouse = {\n  address: "1 Kinning Park",\n  price: 180000,\n  currentOwner: {\n    firstName: "Margaret",\n    lastName: "Conway",\n    email: "margaret@fake-emails.com",\n  },\n};\n\nlet parkAvenueHouse = {\n  address: "50 Park Avenue",\n  price: 195000,\n  currentOwner: {\n    firstName: "Marie",\n    lastName: "McDonald",\n    email: "marie.m@real-emails.com",\n  },\n};\n\n/*\n  DO NOT EDIT ANYTHING ABOVE THIS LINE\n\n  WRITE YOUR CODE BELOW\n*/\n\n// returns the full name (first name + last name) of the owner of the house\nfunction getOwnerFullName(house) {}\n\n// returns an array of the owners\' email addresses of the two houses\nfunction getEmailAddresses(house1, house2) {}\n\n// returns the address for the cheapest house out of the two\nfunction getCheapestAddress(house1, house2) {}\n\n/*\n  DO NOT EDIT ANYTHING BELOW THIS LINE\n*/\nconsole.log(\n  `Expected result: Margaret Conway. Actual result: ${getOwnerFullName(\n    kinningParkHouse\n  )}`\n);\nconsole.log(\n  `Expected result: margaret@fake-emails.com, marie.m@real-emails.com. Actual result: ${getEmailAddresses(\n    kinningParkHouse,\n    parkAvenueHouse\n  )}`\n);\nconsole.log(\n  `Expected result: 1 Kinning Park. Actual result: ${getCheapestAddress(\n    parkAvenueHouse,\n    kinningParkHouse\n  )}`\n);\n'))))),Object(i.b)(b.a,{value:"solution",mdxType:"TabItem"},Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-js"},'/*\n    Given the same "house" object again\n\n    Write the code for the functions as per the description above them\n*/\n\nlet kinningParkHouse = {\n  address: "1 Kinning Park",\n  price: 180000,\n  currentOwner: {\n    firstName: "Margaret",\n    lastName: "Conway",\n    email: "margaret@fake-emails.com",\n  },\n};\n\nlet parkAvenueHouse = {\n  address: "50 Park Avenue",\n  price: 195000,\n  currentOwner: {\n    firstName: "Marie",\n    lastName: "McDonald",\n    email: "marie.m@real-emails.com",\n  },\n};\n\n/*\n  DO NOT EDIT ANYTHING ABOVE THIS LINE\n\n  WRITE YOUR CODE BELOW\n*/\n\n// returns the full name (first name + last name) of the owner of the house\nfunction getOwnerFullName(house) {\n  return `${house.currentOwner.firstName} ${house.currentOwner.lastName}`;\n}\n\n// returns an array of the owners\' email addresses of the two houses\nfunction getEmailAddresses(house1, house2) {\n  return [house1.currentOwner.email, house2.currentOwner.email];\n}\n\n// returns the address for the cheapest house out of the two\nfunction getCheapestAddress(house1, house2) {\n  return house1.price < house2.price ? house1.address : house2.address;\n}\n\n/*\n  DO NOT EDIT ANYTHING BELOW THIS LINE\n*/\nconsole.log(\n  `Expected result: Margaret Conway. Actual result: ${getOwnerFullName(\n    kinningParkHouse\n  )}`\n);\nconsole.log(\n  `Expected result: margaret@fake-emails.com, marie.m@real-emails.com. Actual result: ${getEmailAddresses(\n    kinningParkHouse,\n    parkAvenueHouse\n  )}`\n);\nconsole.log(\n  `Expected result: 1 Kinning Park. Actual result: ${getCheapestAddress(\n    parkAvenueHouse,\n    kinningParkHouse\n  )}`\n);\n')))),Object(i.b)("h2",{id:"object-methods"},"Object Methods"),Object(i.b)("p",null,"Besides having specific properties, objects in the real world can also do things. For example, a computer can display something on the screen, a person can say their names etc... In Javascript, we do this using 'methods'. A method is a function attached to a particular object. You have already used some predefined methods before, for example ",Object(i.b)("em",{parentName:"p"},"toUpperCase()")," on a string or ",Object(i.b)("em",{parentName:"p"},"filter()")," on an array."),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-js"},'let athlete = {\n  name: "Usain Bolt",\n  goldMedals: 25,\n  sayHi: function () {\n    return "Hi everybody!";\n  },\n};\n')),Object(i.b)("p",null,"How do we call this method?"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-js"},'athlete.sayHi(); // returns "Hi everybody!"\n')),Object(i.b)("p",null,"An object method can also rely on the other properties of the object to do more complex calculation. To reference the current object in the body of the method, we will use the keyword ",Object(i.b)("em",{parentName:"p"},"this"),". Let's take an example."),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-js"},'let athlete = {\n  name: "Usain Bolt",\n  goldMedals: 25,\n  sayName: function () {\n    return "My name is " + this.name;\n  },\n};\n\nathlete.sayName(); // returns "My name is Usain Bolt"\n')),Object(i.b)("p",null,"Knowing this, you can have methods which modify existing properties of your object."),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-js"},'let athlete = {\n  name: "Usain Bolt",\n  goldMedals: 25,\n  winNewMedal: function () {\n    this.goldMedals = this.goldMedals + 1;\n  },\n};\n\nathlete.winNewMedal();\nconsole.log(athelete.goldMedals); // prints "26"\n')),Object(i.b)("p",null,"As methods are just functions attached to objects, they can also take parameters."),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-js"},'let athlete = {\n  name: "Usain Bolt",\n  goldMedals: 25,\n  silverMedals: 7,\n  winNewMedal: function (medal) {\n    if (medal === "gold") {\n      this.goldMedals = this.goldMedals + 1;\n    } else {\n      this.silverMedals = this.silverMedals + 1;\n    }\n  },\n};\n\nathlete.winNewMedal("silver");\nconsole.log(athlete.goldMedals); // prints "25"\nconsole.log(athlete.silverMedals); // prints "8"\n')),Object(i.b)("h3",{id:"exercise-1-4"},"Exercise (1)"),Object(i.b)(c.a,{defaultValue:"exercise",values:[{label:"Exercise",value:"exercise"},{label:"Solution",value:"solution"}],mdxType:"Tabs"},Object(i.b)(b.a,{value:"exercise",mdxType:"TabItem"},Object(i.b)("div",{className:"admonition admonition-tip alert alert--success"},Object(i.b)("div",{parentName:"div",className:"admonition-heading"},Object(i.b)("h5",{parentName:"div"},Object(i.b)("span",{parentName:"h5",className:"admonition-icon"},Object(i.b)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},Object(i.b)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Exercise")),Object(i.b)("div",{parentName:"div",className:"admonition-content"},Object(i.b)("p",{parentName:"div"},"A person named Alice is defined below."),Object(i.b)("ol",{parentName:"div"},Object(i.b)("li",{parentName:"ol"},'Add a method "greet" so this person can say hello.'),Object(i.b)("li",{parentName:"ol"},"Add a method \"sayName\" so this person can say their own name. Hint: use 'this' keyword to access the name property.")),Object(i.b)("pre",{parentName:"div"},Object(i.b)("code",{parentName:"pre",className:"language-js"},"let person = {\n  name: \"Alice\",\n  age: 25,\n};\n\n/*\nDO NOT EDIT ANYTHING BELOW THIS LINE\n*/\n\nconsole.log(\n  `Expected result: Hello everybody. Actual result: ${person.greet()}`\n);\nconsole.log(\n  `Expected result: 'My name is Alice'. Actual result: ${person.sayName()}`\n);\n"))))),Object(i.b)(b.a,{value:"solution",mdxType:"TabItem"},Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-js"},'/*\n\nA person named Alice is defined below.\n  1. Add a method "greet" so this person can say hello.\n  2. Add a method "sayName" so this person can say their own name. Hint: use \'this\' keyword to access the name property.\n\n*/\n\nlet person = {\n  name: "Alice",\n  age: 25,\n  greet: function () {\n    return "Hello everybody";\n  },\n};\n\n/*\nDO NOT EDIT ANYTHING BELOW THIS LINE\n*/\n\nconsole.log(\n  `Expected result: Hello everybody. Actual result: ${person.greet()}`\n);\n')))),Object(i.b)("h3",{id:"exercise-2-4"},"Exercise (2)"),Object(i.b)("div",{className:"admonition admonition-tip alert alert--success"},Object(i.b)("div",{parentName:"div",className:"admonition-heading"},Object(i.b)("h5",{parentName:"div"},Object(i.b)("span",{parentName:"h5",className:"admonition-icon"},Object(i.b)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},Object(i.b)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Exercise")),Object(i.b)("div",{parentName:"div",className:"admonition-content"},Object(i.b)("p",{parentName:"div"},"The following code contains syntax errors - try and fix them!\nOnce you fix them, run this file, it should output the correct values!"),Object(i.b)("pre",{parentName:"div"},Object(i.b)("code",{parentName:"pre",className:"language-js"},'\nlet person = {\n    name: "Alice",\n    age: 25,\n    currentAddress: "Glasgow",\n    changeAddress: (newAddress) {\n        currentAddress = newAddress;\n    },\n    celebrateBirthday: function {\n        that.age = that.age + 1;\n    }\n};\n')))),Object(i.b)("h3",{id:"exercise-3-2"},"Exercise (3)"),Object(i.b)("div",{className:"admonition admonition-tip alert alert--success"},Object(i.b)("div",{parentName:"div",className:"admonition-heading"},Object(i.b)("h5",{parentName:"div"},Object(i.b)("span",{parentName:"h5",className:"admonition-icon"},Object(i.b)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},Object(i.b)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Exercise")),Object(i.b)("div",{parentName:"div",className:"admonition-content"},Object(i.b)("p",{parentName:"div"},"The following code contains syntax errors - try and fix them!"),Object(i.b)("p",{parentName:"div"},"Once you fix them, run this file, it should output the correct values!"),Object(i.b)("pre",{parentName:"div"},Object(i.b)("code",{parentName:"pre",className:"language-js"},'\nlet person = {\n    name: "Alice",\n    age: 25,\n    currentAddress: "Glasgow",\n    changeAddress: (newAddress) {\n        currentAddress = newAddress;\n    },\n    celebrateBirthday: function {\n        that.age = that.age + 1;\n    }\n};\n\n\n/*\nDO NOT EDIT ANYTHING BELOW THIS LINE\n*/\n\nperson.changeAddress("Edinburgh");\nconsole.log(`Expected result: Edinburgh. Actual result: ${person.currentAddress}`);\n\nperson.celebrateBirthday();\nconsole.log(`Expected result: 26. Actual result: ${person.age}`);\n\n')))),Object(i.b)("h3",{id:"exercise-4-1"},"Exercise (4)"),Object(i.b)(c.a,{defaultValue:"exercise",values:[{label:"Exercise",value:"exercise"},{label:"Solution",value:"solution"}],mdxType:"Tabs"},Object(i.b)(b.a,{value:"exercise",mdxType:"TabItem"},Object(i.b)("div",{className:"admonition admonition-tip alert alert--success"},Object(i.b)("div",{parentName:"div",className:"admonition-heading"},Object(i.b)("h5",{parentName:"div"},Object(i.b)("span",{parentName:"h5",className:"admonition-icon"},Object(i.b)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},Object(i.b)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Exercise")),Object(i.b)("div",{parentName:"div",className:"admonition-content"},Object(i.b)("p",{parentName:"div"},"Alice has a list of good friends."),Object(i.b)("p",{parentName:"div"},'Define a method "makeFriend" to add a new friend to her list.'),Object(i.b)("pre",{parentName:"div"},Object(i.b)("code",{parentName:"pre",className:"language-js"},'let person = {\n  name: "Alice",\n  friends: ["John", "Nina"],\n};\n\n/*\nDO NOT EDIT ANYTHING BELOW THIS LINE\n*/\n\nperson.makeFriend("Bob");\n\nconsole.log(\n  `Expected result: \'John,Nina,Bob\'. Actual result: ${person.friends}`\n);\n'))))),Object(i.b)(b.a,{value:"solution",mdxType:"TabItem"},Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-js"},'/*\nAlice has a list of good friends.\n\nDefine a method "makeFriend" to add a new friend to her list.\n*/\n\nlet person = {\n  name: "Alice",\n  friends: ["John", "Nina"],\n  makeFriend: function (friendName) {\n    this.friends.push(friendName);\n  },\n};\n\n/*\nDO NOT EDIT ANYTHING BELOW THIS LINE\n*/\n\nperson.makeFriend("Bob");\n\nconsole.log(\n  `Expected result: \'John,Nina,Bob\'. Actual result: ${person.friends}`\n);\n')))),Object(i.b)("h3",{id:"exercise-5"},"Exercise (5)"),Object(i.b)(c.a,{defaultValue:"exercise",values:[{label:"Exercise",value:"exercise"},{label:"Solution",value:"solution"}],mdxType:"Tabs"},Object(i.b)(b.a,{value:"exercise",mdxType:"TabItem"},Object(i.b)("div",{className:"admonition admonition-tip alert alert--success"},Object(i.b)("div",{parentName:"div",className:"admonition-heading"},Object(i.b)("h5",{parentName:"div"},Object(i.b)("span",{parentName:"h5",className:"admonition-icon"},Object(i.b)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},Object(i.b)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Exercise")),Object(i.b)("div",{parentName:"div",className:"admonition-content"},Object(i.b)("p",{parentName:"div"},'A coffee machine is defined below.\nOne that can buy three different coffees.\nComplete the methods "insertMoney" and "getCoffee" to match the expected result.'),Object(i.b)("p",{parentName:"div"},"insertMoney takes an amount in parameter to add money in the coffee machine.\ngetCoffee takes a coffee type in parameter and dispends the selected coffee\nonly if the inserted amount is greater or equal than the price of the coffee!"),Object(i.b)("pre",{parentName:"div"},Object(i.b)("code",{parentName:"pre",className:"language-js"},'let coffeeMachine = {\n  brand: "Super Coffee",\n  prices: {\n    cappuccino: 2.4,\n    blackCoffee: 1.5,\n    flatWhite: 3.0,\n  },\n  insertedAmount: 0,\n  insertMoney: function (amount) {},\n  getCoffee: function (coffee) {},\n};\n\n/*\nDO NOT EDIT ANYTHING BELOW THIS LINE\n*/\n\ncoffeeMachine.insertMoney(2.4);\nconsole.log(\n  `Expected result: \'Please take your cappuccino\'. Actual result: ${coffeeMachine.getCoffee(\n    "cappuccino"\n  )}`\n);\n\ncoffeeMachine.insertMoney(1.5);\nconsole.log(\n  `Expected result: \'Please take your blackCoffee\'. Actual result: ${coffeeMachine.getCoffee(\n    "blackCoffee"\n  )}`\n);\n\ncoffeeMachine.insertMoney(4.0);\nconsole.log(\n  `Expected result: \'Please take your flatWhite\'. Actual result: ${coffeeMachine.getCoffee(\n    "flatWhite"\n  )}`\n);\n\ncoffeeMachine.insertMoney(2.4);\nconsole.log(\n  `Expected result: \'Sorry you don\'t have enough money for a flatWhite\'. Actual result: ${coffeeMachine.getCoffee(\n    "flatWhite"\n  )}`\n);\n'))))),Object(i.b)(b.a,{value:"solution",mdxType:"TabItem"},Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-js"},'/*\nA coffee machine is defined below.\nOne can buy three different coffees.\nComplete the methods "insertMoney" and "getCoffee" to match the expected result.\n\ninsertMoney takes an amount in parameter to add money in the coffee machine.\ngetCoffee takes a coffee type in parameter and dispends the selected coffee\nonly if the inserted amount is greater or equal than the price of the coffee!\n*/\n\nlet coffeeMachine = {\n  brand: "Super Coffee",\n  prices: {\n    cappuccino: 2.4,\n    blackCoffee: 1.5,\n    flatWhite: 3.0,\n  },\n  insertedAmount: 0,\n  insertMoney: function (amount) {\n    this.insertedAmount += amount; // or this.insertedAmount = this.insertedAmount + amount;\n  },\n  getCoffee: function (coffee) {\n    if (this.insertedAmount >= this.prices[coffee]) {\n      this.insertedAmount = 0; // insertedAmount resets after a transaction\n      return `Please take your ${coffee}`;\n    } else {\n      return `Sorry you don\'t have enough money for a ${coffee}`;\n    }\n  },\n};\n\n/*\nDO NOT EDIT ANYTHING BELOW THIS LINE\n*/\n\ncoffeeMachine.insertMoney(2.4);\nconsole.log(\n  `Expected result: \'Please take your cappuccino\'. Actual result: ${coffeeMachine.getCoffee(\n    "cappuccino"\n  )}`\n);\n\ncoffeeMachine.insertMoney(1.5);\nconsole.log(\n  `Expected result: \'Please take your blackCoffee\'. Actual result: ${coffeeMachine.getCoffee(\n    "blackCoffee"\n  )}`\n);\n\ncoffeeMachine.insertMoney(4.0);\nconsole.log(\n  `Expected result: \'Please take your flatWhite\'. Actual result: ${coffeeMachine.getCoffee(\n    "flatWhite"\n  )}`\n);\n\ncoffeeMachine.insertMoney(2.4);\nconsole.log(\n  `Expected result: \'Sorry you don\'t have enough money for a flatWhite\'. Actual result: ${coffeeMachine.getCoffee(\n    "flatWhite"\n  )}`\n);\n')))),Object(i.b)("h2",{id:"arrays-of-objects"},"Arrays of objects"),Object(i.b)("p",null,"In the past weeks, you've learned about using arrays of numbers, arrays of string etc... In the following, we will learn how to use arrays of objects."),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-js"},'let kitten1 = {\n  name: "Fluffy",\n  weeksOld: 2,\n};\n\nlet kitten2 = {\n  name: "Megatron",\n  weeksOld: 1,\n};\n\nlet kitten3 = {\n  name: "Billy",\n  weeksOld: 5,\n};\n\nlet kittens = [kitten1, kitten2, kitten3];\n')),Object(i.b)("p",null,"You can also use all the functions for arrays that you learned before: find, some, every, filter, map, forEach... As an example, we want to filter all the kittens who are less than 3 weeks old:"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-js"},"function isYoungerThan3Weeks(kitten) {\n  return kitten.weeksOld <= 3;\n}\n\nkittens.filter(isYoungerThan3Weeks); // returns [kitten1, kitten2];\n")),Object(i.b)("p",null,"What if we want to get an array of all the kitties names?"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-js"},'function getName(kitten) {\n  return kitten.name;\n}\n\nkittens.map(getName); // returns ["Fluffy", "Megatron", "Billy"]\n')),Object(i.b)("h3",{id:"exercise-1-5"},"Exercise (1)"),Object(i.b)(c.a,{defaultValue:"exercise",values:[{label:"Exercise",value:"exercise"},{label:"Solution",value:"solution"}],mdxType:"Tabs"},Object(i.b)(b.a,{value:"exercise",mdxType:"TabItem"},Object(i.b)("div",{className:"admonition admonition-tip alert alert--success"},Object(i.b)("div",{parentName:"div",className:"admonition-heading"},Object(i.b)("h5",{parentName:"div"},Object(i.b)("span",{parentName:"h5",className:"admonition-icon"},Object(i.b)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},Object(i.b)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Exercise")),Object(i.b)("div",{parentName:"div",className:"admonition-content"},Object(i.b)("ol",{parentName:"div"},Object(i.b)("li",{parentName:"ol"},"Define an array containing the 3 persons defined below."),Object(i.b)("li",{parentName:"ol"},"Return an array of the person names (hint: use map)."),Object(i.b)("li",{parentName:"ol"},"Filter the persons to return an array with the person younger than 28 years old (hint: use filter).")),Object(i.b)("pre",{parentName:"div"},Object(i.b)("code",{parentName:"pre",className:"language-js"},'\nlet person1 = {\n  name: "Alice",\n  age: 25,\n};\n\nlet person2 = {\n  name: "Bob",\n  age: 30,\n};\n\nlet person3 = {\n  name: "John",\n  age: 20,\n};\n\n/*\nDO NOT EDIT ANYTHING ABOVE THIS LINE\nWRITE YOUR CODE BELOW\n*/\n\nlet persons = // Complete here\n\nlet personNames = // Complete here\n\nlet personsYoungerThan28YearsOld = // Complete here\n\n/*\nDO NOT EDIT ANYTHING BELOW THIS LINE\n*/\n\nconsole.log(\n  "Question 1: array defined with 3 persons -> ",\n  persons[0] === person1 && persons[1] === person2 && persons[2] === person3\n    ? "Passed :)"\n    : "Not yet :("\n);\n\nconsole.log(\n  "Question 2: array containing the person names -> ",\n  personNames[0] === "Alice" &&\n    personNames[1] === "Bob" &&\n    personNames[2] === "John"\n    ? "Passed :)"\n    : "Not yet :("\n);\n\nconsole.log(\n  "Question 3: array containing the persons younger than 28 years old -> ",\n  personsYoungerThan28YearsOld[0] === person1 &&\n    personsYoungerThan28YearsOld[1] === person3\n    ? "Passed :)"\n    : "Not yet :("\n);\n'))))),Object(i.b)(b.a,{value:"solution",mdxType:"TabItem"},Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-js"},'/*\n1) Define an array containing the 3 persons defined below.\n2) Return an array of the person names (hint: use map).\n3) Filter the persons to return an array with the person younger than 28 years old (hint: use filter).\n*/\n\nlet person1 = {\n  name: "Alice",\n  age: 25,\n};\n\nlet person2 = {\n  name: "Bob",\n  age: 30,\n};\n\nlet person3 = {\n  name: "John",\n  age: 20,\n};\n\n/*\nDO NOT EDIT ANYTHING ABOVE THIS LINE\nWRITE YOUR CODE BELOW\n*/\n\nlet persons = [person1, person2, person3];\n\nlet personNames = persons.map((person) => person.name);\n\nlet personsYoungerThan28YearsOld = persons.filter((person) => person.age < 28);\n\n/*\nDO NOT EDIT ANYTHING BELOW THIS LINE\n*/\n\nconsole.log(\n  "Question 1: array defined with 3 persons -> ",\n  persons[0] === person1 && persons[1] === person2 && persons[2] === person3\n    ? "Passed :)"\n    : "Not yet :("\n);\n\nconsole.log(\n  "Question 2: array containing the person names -> ",\n  personNames[0] === "Alice" &&\n    personNames[1] === "Bob" &&\n    personNames[2] === "John"\n    ? "Passed :)"\n    : "Not yet :("\n);\n\nconsole.log(\n  "Question 3: array containing the persons younger than 28 years old -> ",\n  personsYoungerThan28YearsOld[0] === person1 &&\n    personsYoungerThan28YearsOld[1] === person3\n    ? "Passed :)"\n    : "Not yet :("\n);\n')))),Object(i.b)("h3",{id:"exercise-2-5"},"Exercise (2)"),Object(i.b)(c.a,{defaultValue:"exercise",values:[{label:"Exercise",value:"exercise"},{label:"Solution",value:"solution"}],mdxType:"Tabs"},Object(i.b)(b.a,{value:"exercise",mdxType:"TabItem"},Object(i.b)("div",{className:"admonition admonition-tip alert alert--success"},Object(i.b)("div",{parentName:"div",className:"admonition-heading"},Object(i.b)("h5",{parentName:"div"},Object(i.b)("span",{parentName:"h5",className:"admonition-icon"},Object(i.b)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},Object(i.b)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Exercise")),Object(i.b)("div",{parentName:"div",className:"admonition-content"},Object(i.b)("p",{parentName:"div"},"An array of travel destinations is defined below.\nEach destination has a name, a distance from Glasgow, and a list of transportations available to go there."),Object(i.b)("ol",{parentName:"div"},Object(i.b)("li",{parentName:"ol"},"Filter the travelDestinations array to return all destination names reachable within 500 kms."),Object(i.b)("li",{parentName:"ol"},"Find a destination name reachable by ferry."),Object(i.b)("li",{parentName:"ol"},"Print in the console all the destination names more than 300 kms far away and reachable by train.")),Object(i.b)("pre",{parentName:"div"},Object(i.b)("code",{parentName:"pre",className:"language-js"},'\nlet destination1 = {\n  destinationName: "Edinburgh",\n  distanceKms: 80,\n  transportations: ["car", "bus", "train"],\n};\n\nlet destination2 = {\n  destinationName: "London",\n  distanceKms: 650,\n  transportations: ["car", "bus", "train"],\n};\n\nlet destination3 = {\n  destinationName: "Paris",\n  distanceKms: 900,\n  transportations: ["train", "plane"],\n};\n\nlet destination4 = {\n  destinationName: "Dublin",\n  distanceKms: 350,\n  transportations: ["plane", "ferry"],\n};\n\nlet travelDestinations = [\n  destination1,\n  destination2,\n  destination3,\n  destination4,\n];\n\n/*\nDO NOT EDIT ANYTHING ABOVE THIS LINE\nWRITE YOUR CODE BELOW\n*/\n\nlet destinationNamesWithin500Kms = // Complete here\n\nlet destinationNameReachableByFerry = // Complete here\n\nlet destinationNamesMoreThan300KmsAwayByTrain = // Complete here (PRINT THE RESULT IN THE CONSOLE USING FOREACH)\n\n/*\nDO NOT EDIT ANYTHING BELOW THIS LINE\n*/\n\nconsole.log(\n  `Question 1) Expected result: Edinburgh,Dublin, actual result: ${destinationNamesWithin500Kms}`\n);\nconsole.log(\n  `Question 2) Expected result: Dublin, actual result: ${destinationNameReachableByFerry}`\n);\nconsole.log(\n  `Question 3) Expected result: London,Paris, actual result: ${destinationNamesMoreThan300KmsAwayByTrain}`\n);\n\n'))))),Object(i.b)(b.a,{value:"solution",mdxType:"TabItem"},Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-js"},'/*\nAn array of travel destinations is defined below.\nEach destination has a name, a distance from Glasgow, and a list of transportations available to go there.\n\n1) Filter the travelDestinations array to return all destination names reachable within 500 kms.\n2) Find a destination name reachable by ferry.\n3) Print in the console all the destination names more than 300 kms far away and reachable by train.\n*/\n\nlet destination1 = {\n  destinationName: "Edinburgh",\n  distanceKms: 80,\n  transportations: ["car", "bus", "train"],\n};\n\nlet destination2 = {\n  destinationName: "London",\n  distanceKms: 650,\n  transportations: ["car", "bus", "train"],\n};\n\nlet destination3 = {\n  destinationName: "Paris",\n  distanceKms: 900,\n  transportations: ["train", "plane"],\n};\n\nlet destination4 = {\n  destinationName: "Dublin",\n  distanceKms: 350,\n  transportations: ["plane", "ferry"],\n};\n\nlet travelDestinations = [\n  destination1,\n  destination2,\n  destination3,\n  destination4,\n];\n\n/* \nDO NOT EDIT ANYTHING ABOVE THIS LINE\nWRITE YOUR CODE BELOW\n*/\n\nlet getDestinationName = (destination) => destination.destinationName;\n\nlet isWithin500Kms = (destination) => destination.distanceKms <= 500;\nlet destinationNamesWithin500Kms = travelDestinations\n  .filter(isWithin500Kms)\n  .map(getDestinationName);\n// or in one line\n// let destinationNamesWithin500Kms = travelDestinations.filter(destination=>destination.distanceKms<=500).map(destination=>destination.destinationName);\n\nlet isReachableByFerry = (destination) =>\n  destination.transportations.includes("ferry");\nlet destinationNameReachableByFerry = travelDestinations\n  .filter(isReachableByFerry)\n  .map(getDestinationName);\n// or in one line\n// let destinationNameReachableByFerry = travelDestinations.filter(destination=>destination.transportations.includes(\'ferry\')).map(destination=>destination.destinationName);\n\nlet isMoreThan300KmsAwayByTrain = (destination) =>\n  destination.distanceKms > 300 &&\n  destination.transportations.includes("train");\nlet destinationNamesMoreThan300KmsAwayByTrain = travelDestinations\n  .filter(isMoreThan300KmsAwayByTrain)\n  .map(getDestinationName);\n// or in one line\n// let destinationNamesMoreThan300KmsAwayByTrain = travelDestinations.filter(destination=>destination.distanceKms>300 && destination.transportations.includes(\'train\')).map(destination=>destination.destinationName)\n\n/*\nDO NOT EDIT ANYTHING BELOW THIS LINE\n*/\n\nconsole.log(\n  `Question 1) Expected result: Edinburgh,Dublin, actual result: ${destinationNamesWithin500Kms}`\n);\nconsole.log(\n  `Question 2) Expected result: Dublin, actual result: ${destinationNameReachableByFerry}`\n);\nconsole.log(\n  `Question 3) Expected result: London,Paris, actual result: ${destinationNamesMoreThan300KmsAwayByTrain}`\n);\n')))),Object(i.b)("h3",{id:"exercise-3-3"},"Exercise (3)"),Object(i.b)(c.a,{defaultValue:"exercise",values:[{label:"Exercise",value:"exercise"},{label:"Solution",value:"solution"}],mdxType:"Tabs"},Object(i.b)(b.a,{value:"exercise",mdxType:"TabItem"},Object(i.b)("div",{className:"admonition admonition-tip alert alert--success"},Object(i.b)("div",{parentName:"div",className:"admonition-heading"},Object(i.b)("h5",{parentName:"div"},Object(i.b)("span",{parentName:"h5",className:"admonition-icon"},Object(i.b)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},Object(i.b)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Exercise")),Object(i.b)("div",{parentName:"div",className:"admonition-content"},Object(i.b)("p",{parentName:"div"},"Below are some restaurants in Glasgow. Each restaurant has a name, the number of total seats,\nthe number of customers in the restaurant at the moment and the menu with prices."),Object(i.b)("p",{parentName:"div"},"We want to build an object to simulate a Restaurant Finder application (see below restaurantFinderApplication)."),Object(i.b)("ol",{parentName:"div"},Object(i.b)("li",{parentName:"ol"},Object(i.b)("p",{parentName:"li"},"Define a method findAvailableRestaurants which takes a number of people in parameter and returns\nall the restaurant names which have the required number of seats available at the moment.")),Object(i.b)("li",{parentName:"ol"},Object(i.b)("p",{parentName:"li"},"Define a method findRestaurantServingDish which takes a dish name in parameter and returns\nall the restaurant names serving this dish.")),Object(i.b)("li",{parentName:"ol"},Object(i.b)("p",{parentName:"li"},"Define a method countNumberOfRestaurantsInArea which takes an area of Glasgow in parameter (center, west),\nand returns the number of restaurants in this area."))),Object(i.b)("pre",{parentName:"div"},Object(i.b)("code",{parentName:"pre",className:"language-js"},'let restaurant1 = {\n  name: "Paesano",\n  totalSeats: 10,\n  numberOfCustomers: 8,\n  address: {\n    city: "Glasgow",\n    area: "center",\n  },\n  menu: ["pizza", "calzone", "salad"],\n};\n\nlet restaurant2 = {\n  name: "Ubiquitous Chip",\n  totalSeats: 20,\n  numberOfCustomers: 10,\n  address: {\n    city: "Glasgow",\n    area: "west",\n  },\n  menu: ["salad", "chocolate cake", "roast lamb"],\n};\n\nlet restaurant3 = {\n  name: "Monkeyz",\n  totalSeats: 15,\n  numberOfCustomers: 8,\n  address: {\n    city: "Glasgow",\n    area: "center",\n  },\n  menu: ["stew", "chocolate cake", "panini"],\n};\n\nlet restaurants = [restaurant1, restaurant2, restaurant3];\n\n/*\nDO NOT EDIT ANYTHING ABOVE THIS LINE\nWRITE YOUR CODE BELOW\n*/\n\nlet restaurantFinderApplication = {\n  applicationName: "Restaurant Finder",\n  applicationVersion: "1.0",\n  restaurants: restaurants,\n  findAvailableRestaurants: function (numberOfPeople) {\n    // Complete here\n  },\n  findRestaurantServingDish: function (dishName) {\n    // Complete here\n  },\n  countNumberOfRestaurantsInArea: function (area) {\n    // Complete here\n  },\n};\n\n/*\nDO NOT EDIT ANYTHING BELOW THIS LINE\n*/\n\nlet restaurantsAvailableFor5People = restaurantFinderApplication.findAvailableRestaurants(\n  5\n);\nconsole.log(\n  `Find available restaurants for 5 people: Expected result: Ubiquitous Chip,Monkeyz, actual result: ${restaurantsAvailableFor5People}`\n);\n\nlet restaurantsServingSalad = restaurantFinderApplication.findRestaurantServingDish(\n  "salad"\n);\nconsole.log(\n  `Find restaurants serving salad: Expected result: Paesano,Ubiquitous Chip, actual result: ${restaurantsServingSalad}`\n);\n\nlet numberOfRestaurantsInCityCentre = restaurantFinderApplication.countNumberOfRestaurantsInArea(\n  "center"\n);\nconsole.log(\n  `Number of restaurants in city centre: Expected result: 2, actual result: ${numberOfRestaurantsInCityCentre}`\n);\n'))))),Object(i.b)(b.a,{value:"solution",mdxType:"TabItem"},Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-js"},'/* \nBelow are some restaurants in Glasgow. Each restaurant has a name, the number of total seats, \nthe number of customers in the restaurant at the moment and the menu with prices.\n\nWe want to build an object to simulate a Restaurant Finder application (see below restaurantFinderApplication).\n\n1) Define a method findAvailableRestaurants which takes a number of people in parameter and returns \nall the restaurant names which have the required number of seats available at the moment.\n\n2) Define a method findRestaurantServingDish which takes a dish name in parameter and returns\nall the restaurant names serving this dish.\n\n3) Define a method countNumberOfRestaurantsInArea which takes an area of Glasgow in parameter (center, west),\nand returns the number of restaurants in this area.\n*/\n\nlet restaurant1 = {\n  name: "Paesano",\n  totalSeats: 10,\n  numberOfCustomers: 8,\n  address: {\n    city: "Glasgow",\n    area: "center",\n  },\n  menu: ["pizza", "calzone", "salad"],\n};\n\nlet restaurant2 = {\n  name: "Ubiquitous Chip",\n  totalSeats: 20,\n  numberOfCustomers: 10,\n  address: {\n    city: "Glasgow",\n    area: "west",\n  },\n  menu: ["salad", "chocolate cake", "roast lamb"],\n};\n\nlet restaurant3 = {\n  name: "Monkeyz",\n  totalSeats: 15,\n  numberOfCustomers: 8,\n  address: {\n    city: "Glasgow",\n    area: "center",\n  },\n  menu: ["stew", "chocolate cake", "panini"],\n};\n\nlet restaurants = [restaurant1, restaurant2, restaurant3];\n\n/* \nDO NOT EDIT ANYTHING ABOVE THIS LINE\nWRITE YOUR CODE BELOW\n*/\n\nconst isRestaurantAvailable = (restaurant, numberOfPeople) => {\n  const availableSeats = restaurant.totalSeats - restaurant.numberOfCustomers;\n  return availableSeats >= numberOfPeople;\n};\n\nconst includesDish = (restaurant, dishName) =>\n  restaurant.menu.includes(dishName);\n\nlet restaurantFinderApplication = {\n  applicationName: "Restaurant Finder",\n  applicationVersion: "1.0",\n  restaurants: restaurants,\n  findAvailableRestaurants: function (numberOfPeople) {\n    return restaurants\n      .filter((restaurant) => isRestaurantAvailable(restaurant, numberOfPeople))\n      .map((restaurant) => restaurant.name);\n    // or\n    // return restaurants.filter((restaurant) => (restaurant.totalSeats - restaurant.numberOfCustomers) >= numberOfPeople ).map(restaurant => restaurant.name);\n  },\n  findRestaurantServingDish: function (dishName) {\n    return restaurants\n      .filter((restaurant) => includesDish(restaurant, dishName))\n      .map((restaurant) => restaurant.name);\n    // or\n    // return restaurants.filter(restaurant => restaurant.menu.includes(dishName)).map(restaurant => restaurant.name);\n  },\n  countNumberOfRestaurantsInArea: function (area) {\n    return restaurants.filter((restaurant) => restaurant.address.area === area)\n      .length;\n  },\n};\n\n/*\nDO NOT EDIT ANYTHING BELOW THIS LINE\n*/\n\nlet restaurantsAvailableFor5People = restaurantFinderApplication.findAvailableRestaurants(\n  5\n);\nconsole.log(\n  `Find available restaurants for 5 people: Expected result: Ubiquitous Chip,Monkeyz, actual result: ${restaurantsAvailableFor5People}`\n);\n\nlet restaurantsServingSalad = restaurantFinderApplication.findRestaurantServingDish(\n  "salad"\n);\nconsole.log(\n  `Find restaurants serving salad: Expected result: Paesano,Ubiquitous Chip, actual result: ${restaurantsServingSalad}`\n);\n\nlet numberOfRestaurantsInCityCentre = restaurantFinderApplication.countNumberOfRestaurantsInArea(\n  "center"\n);\nconsole.log(\n  `Number of restaurants in city centre: Expected result: 2, actual result: ${numberOfRestaurantsInCityCentre}`\n);\n')))),Object(i.b)("h2",{id:"object-built-in-methods"},"Object built-in methods"),Object(i.b)("p",null,"Since we started JavaScript, we have used ",Object(i.b)("inlineCode",{parentName:"p"},"console.log")," to print things to our console."),Object(i.b)("p",null,"In week 2 and 3, you learned about array methods like ",Object(i.b)("inlineCode",{parentName:"p"},".map()"),", and ",Object(i.b)("inlineCode",{parentName:"p"},".filter()"),"."),Object(i.b)("p",null,"These are what we call built-in methods, and they're part of the JavaScript language. Someone else created these methods, and we can use them in our code."),Object(i.b)("p",null,"Like arrays, objects have built-in methods that can help us. In this lesson, we will learn about ",Object(i.b)("inlineCode",{parentName:"p"},"Object.keys()")," and ",Object(i.b)("inlineCode",{parentName:"p"},"Object.values()"),"."),Object(i.b)("h3",{id:"objectkeys"},"Object.keys()"),Object(i.b)("p",null,"This method goes into our object, and returns the object property names as an array."),Object(i.b)("p",null,"Here is an example output for using ",Object(i.b)("inlineCode",{parentName:"p"},".keys()"),":"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-js"},"let footballClubs = {\n  chelsea_fc: \"England\",\n  fc_barcelona: \"Spain\",\n  ac_milan: \"Italy\",\n};\n\nconsole.log(Object.keys(footballClubs));\n// prints [ 'chelsea_fc', 'fc_barcelona', 'ac_milan' ]\n")),Object(i.b)("h3",{id:"objectvalues"},"Object.values()"),Object(i.b)("p",null,"This method goes into our object, and returns the values of every property as an array."),Object(i.b)("p",null,"Here is an example output for using ",Object(i.b)("inlineCode",{parentName:"p"},".values()"),":"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-js"},"let footballClubs = {\n  chelsea_fc: \"England\",\n  fc_barcelona: \"Spain\",\n  ac_milan: \"Italy\",\n};\n\nconsole.log(Object.values(footballClubs));\n// prints [ 'England', 'Spain', 'Italy' ]\n")),Object(i.b)("h3",{id:"exercise-1-6"},"Exercise (1)"),Object(i.b)(c.a,{defaultValue:"exercise",values:[{label:"Exercise",value:"exercise"},{label:"Solution",value:"solution"}],mdxType:"Tabs"},Object(i.b)(b.a,{value:"exercise",mdxType:"TabItem"},Object(i.b)("div",{className:"admonition admonition-tip alert alert--success"},Object(i.b)("div",{parentName:"div",className:"admonition-heading"},Object(i.b)("h5",{parentName:"div"},Object(i.b)("span",{parentName:"h5",className:"admonition-icon"},Object(i.b)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},Object(i.b)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Exercise")),Object(i.b)("div",{parentName:"div",className:"admonition-content"},Object(i.b)("p",{parentName:"div"},"Return the keys and values of the following object"),Object(i.b)("pre",{parentName:"div"},Object(i.b)("code",{parentName:"pre",className:"language-js"},"\nlet capitalCities = {\n  scotland: \"Edinburgh\",\n  kenya: \"Nairobi\",\n  australia: \"Canberra\",\n  canada: \"Ottawa\",\n};\n\nlet highScores = {\n  55: \"Alistair\",\n  100: \"David\",\n  89: \"Hannah\",\n  34: [\"Sergi\", \"Frank\"],\n};\n\n// ONLY EDIT BELOW HERE\n\nlet capitalCitiesKeys = ;\nlet highScoresKeys = ;\nlet capitalCitiesValues = ;\nlet highScoresValues = ;\n\n// ONLY EDIT ABOVE HERE\n\nconsole.log(capitalCitiesKeys);\n// prints [ 'scotland', 'kenya', 'australia', 'canada' ]\n\nconsole.log(highScoresKeys);\n// prints ['34, '55', '89', '100']\n\nconsole.log(capitalCitiesValues);\n// prints [ 'Edinburgh', 'Nairobi', 'Canberra', 'Ottawa' ]\n\nconsole.log(highScoresValues);\n// prints [[ 'Sergi', 'Frank' ], 'Alistair, 'David', 'Hannah']\n"))))),Object(i.b)(b.a,{value:"solution",mdxType:"TabItem"},Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-js"},"/*\n\nReturn the keys and values of the following object\n\n*/\n\nlet capitalCities = {\n  scotland: \"Edinburgh\",\n  kenya: \"Nairobi\",\n  australia: \"Canberra\",\n  canada: \"Ottawa\",\n};\n\nlet highScores = {\n  55: \"Alistair\",\n  100: \"David\",\n  89: \"Hannah\",\n  34: [\"Sergi\", \"Frank\"],\n};\n\n// ONLY EDIT BELOW HERE\n\nlet capitalCitiesKeys = Object.keys(capitalCities);\nlet highScoresKeys = Object.keys(highScores);\nlet capitalCitiesValues = Object.values(capitalCities);\nlet highScoresValues = Object.values(highScores);\n\n// ONLY EDIT ABOVE HERE\n\nconsole.log(capitalCitiesKeys);\n// prints [ 'scotland', 'kenya', 'australia', 'canada' ]\n\nconsole.log(highScoresKeys);\n// prints ['34, '55', '89', '100']\n\nconsole.log(capitalCitiesValues);\n// prints [ 'Edinburgh', 'Nairobi', 'Canberra', 'Ottawa' ]\n\nconsole.log(highScoresValues);\n// prints [[ 'Sergi', 'Frank' ], 'Alistair, 'David', 'Hannah']\n")))),Object(i.b)("h3",{id:"exercise-2-6"},"Exercise (2)"),Object(i.b)(c.a,{defaultValue:"exercise",values:[{label:"Exercise",value:"exercise"},{label:"Solution",value:"solution"}],mdxType:"Tabs"},Object(i.b)(b.a,{value:"exercise",mdxType:"TabItem"},Object(i.b)("div",{className:"admonition admonition-tip alert alert--success"},Object(i.b)("div",{parentName:"div",className:"admonition-heading"},Object(i.b)("h5",{parentName:"div"},Object(i.b)("span",{parentName:"h5",className:"admonition-icon"},Object(i.b)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},Object(i.b)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Exercise")),Object(i.b)("div",{parentName:"div",className:"admonition-content"},Object(i.b)("p",{parentName:"div"},"You have an object of mentors and their ages below, but the keys are inconsistent. JOSH and JAMIE are uppercase, while james and Mozafar are not. You want to return an array of mentors with the names in uppercase."),Object(i.b)("p",{parentName:"div"},"You're going to have to used what we learned at the start of this lesson, and some other JavaScript methods to accomplish this task."),Object(i.b)("pre",{parentName:"div"},Object(i.b)("code",{parentName:"pre",className:"language-js"},"\nlet mentorsAges = {\n  james: 29,\n  JOSH: 35,\n  JAMIE: 25,\n  Mozafar: 30,\n};\n\n// ONLY EDIT BELOW THIS LINE\n\nlet mentorsNames = ;\n\nlet mentorsNamedUppercased = ;\n\n// ONLY EDIT ABOVE THIS LINE\n\nconsole.log(mentorsNamedUppercased);\n// prints [ 'JAMES', 'JOSH', 'JAMIE', 'MOZAFAR' ]\n\n"))))),Object(i.b)(b.a,{value:"solution",mdxType:"TabItem"},Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-js"},"/*\n\nYou have an object of mentors and their ages below, but the keys are inconsistent. JOSH and JAMIE are uppercase, while james and Mozafar are not. You want to return an array of mentors with the names in uppercase.\n\nYou're going to have to used what we learned at the start of this lesson, and some other JavaScript methods to accomplish this task.\n\n*/\n\nlet mentorsAges = {\n  james: 29,\n  JOSH: 35,\n  JAMIE: 25,\n  Mozafar: 30,\n};\n\n// ONLY EDIT BELOW THIS LINE\n\nlet mentorsNames = Object.keys(mentorsAges);\n\nlet mentorsNamedUppercased = mentorsNames.map((mentorName) =>\n  mentorName.toUpperCase()\n);\n\n// ONLY EDIT ABOVE THIS LINE\n\nconsole.log(mentorsNamedUppercased);\n// prints [ 'JAMES', 'JOSH', 'JAMIE', 'MOZAFAR' ]\n")))),Object(i.b)("h3",{id:"exercise-3-4"},"Exercise (3)"),Object(i.b)(c.a,{defaultValue:"exercise",values:[{label:"Exercise",value:"exercise"},{label:"Solution",value:"solution"}],mdxType:"Tabs"},Object(i.b)(b.a,{value:"exercise",mdxType:"TabItem"},Object(i.b)("div",{className:"admonition admonition-tip alert alert--success"},Object(i.b)("div",{parentName:"div",className:"admonition-heading"},Object(i.b)("h5",{parentName:"div"},Object(i.b)("span",{parentName:"h5",className:"admonition-icon"},Object(i.b)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},Object(i.b)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Exercise")),Object(i.b)("div",{parentName:"div",className:"admonition-content"},Object(i.b)("p",{parentName:"div"},"Objects very often contain other objects."),Object(i.b)("p",{parentName:"div"},"This exercise will give you practice in getting the keys of objects inside other objects."),Object(i.b)("p",{parentName:"div"},"Use the provided console.log statements below and follow the instructions above them."),Object(i.b)("pre",{parentName:"div"},Object(i.b)("code",{parentName:"pre",className:"language-js"},'let storeBranches = {\n  glasgow: {\n    manager: "Andrew",\n    assistant: "Laura",\n    interns: {\n      head_intern: "Mozafar",\n      intern: "James",\n    },\n  },\n\n  edinburgh: {\n    director: "Kelly",\n    manager: "Sally",\n    assistant: "Derek",\n    interns: {\n      head_intern: "John",\n      intern: "Sarah",\n    },\n  },\n};\n\n// ONLY EDIT BELOW THIS LINE\n\n// # 1\n// prints [ \'glasgow\', \'edinburgh\' ]\nconsole.log();\n\n// # 2\n// prints [ \'manager\', \'assistant\', \'interns\' ]\nconsole.log();\n\n// # 3\n// prints [ \'head_intern\', \'intern\' ]\nconsole.log();\n\n// ONLY EDIT ABOVE THIS LINE\n'))))),Object(i.b)(b.a,{value:"solution",mdxType:"TabItem"},Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-js"},'/*\n\nObjects very often contain other objects.\n\nThis exercise will give you practice in getting the keys of objects inside other objects.\n\nUse the provided console.log statements below and follow the instructions above them.\n\n*/\n\nlet storeBranches = {\n  glasgow: {\n    manager: "Andrew",\n    assistant: "Laura",\n    interns: {\n      head_intern: "Mozafar",\n      intern: "James",\n    },\n  },\n\n  edinburgh: {\n    director: "Kelly",\n    manager: "Sally",\n    assistant: "Derek",\n    interns: {\n      head_intern: "John",\n      intern: "Sarah",\n    },\n  },\n};\n\n// ONLY EDIT BELOW THIS LINE\n\n// # 1\n// prints [ \'glasgow\', \'edinburgh\' ]\nconsole.log(Object.keys(storeBranches));\n\n// # 2\n// prints [ \'manager\', \'assistant\', \'interns\' ]\nconsole.log(Object.keys(storeBranches.glasgow));\n\n// # 3\n// prints [ \'head_intern\', \'intern\' ]\nconsole.log(Object.keys(storeBranches.glasgow.interns));\n\n// ONLY EDIT ABOVE THIS LINE\n')))),Object(i.b)("h2",{id:"loop-through-an-object"},"Loop through an Object"),Object(i.b)("p",null,"Once in a while it will be required to loop through objects. You can achieve this in various ways."),Object(i.b)("h3",{id:"use-forin-statement"},"Use ",Object(i.b)("inlineCode",{parentName:"h3"},"for...in")," statement"),Object(i.b)("p",null,"The ",Object(i.b)("inlineCode",{parentName:"p"},"for...in")," statement iterates over all distinct properties of an object."),Object(i.b)("p",null,"Example:"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-js"},"const flowers = {\n  tulip: 20,\n  rose: 10,\n  lily: 15,\n};\n\nfor (const key in flowers) {\n  console.log(`${key}: ${flowers[key]}`);\n}\n\n// Prints\n// tulip: 20\n// rose: 10\n// lily: 15\n")),Object(i.b)("h3",{id:"convert-object-into-an-array-and-loop-through-the-array"},"Convert object into an array and loop through the array"),Object(i.b)("p",null,"Since we started JavaScript, we have used ",Object(i.b)("inlineCode",{parentName:"p"},"console.log")," to print things to our console."),Object(i.b)("p",null,"Once you create an array of the object's keys or values using the ",Object(i.b)("inlineCode",{parentName:"p"},"Object.keys"),", ",Object(i.b)("inlineCode",{parentName:"p"},"Object.values")," methods, you can loop through it as if it was a normal array using array methods like ",Object(i.b)("inlineCode",{parentName:"p"},"forEach"),"."),Object(i.b)("p",null,"Example:"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-js"},"const flowers = {\n  tulip: 20,\n  rose: 10,\n  lily: 15,\n};\n\n// Looping through the array created from Object.keys\nconst flowerKeys = Object.keys(flowers);\n\nflowerKeys.forEach((key) => {\n  console.log(`${key}: ${flowers[key]}`);\n});\n\n// Prints\n// tulip: 20\n// rose: 10\n// lily: 15\n")),Object(i.b)("h4",{id:"exercise-1-7"},"Exercise (1)"),Object(i.b)(c.a,{defaultValue:"exercise",values:[{label:"Exercise",value:"exercise"},{label:"Solution",value:"solution"}],mdxType:"Tabs"},Object(i.b)(b.a,{value:"exercise",mdxType:"TabItem"},Object(i.b)("div",{className:"admonition admonition-tip alert alert--success"},Object(i.b)("div",{parentName:"div",className:"admonition-heading"},Object(i.b)("h5",{parentName:"div"},Object(i.b)("span",{parentName:"h5",className:"admonition-icon"},Object(i.b)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},Object(i.b)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Exercise")),Object(i.b)("div",{parentName:"div",className:"admonition-content"},Object(i.b)("p",{parentName:"div"},"You are given an object of trainee names and grades\nLoop through all the trainees' grades and console log the name and grade of the ones with grade more than 18\nTry to use both methods shown above to achieve this"),Object(i.b)("pre",{parentName:"div"},Object(i.b)("code",{parentName:"pre",className:"language-js"},"const traineeGrades = {\n  tom: 20,\n  george: 17,\n  abdul: 19,\n};\n\n// Prints\n// TOM - 20\n// ABDUL - 19\n"))))),Object(i.b)(b.a,{value:"solution",mdxType:"TabItem"},Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-js"},"// You are given an object of trainee names and grades\n// Loop through all the trainees' grades and console log the name and grade of the ones with grade more than 18\n// Try to use both methods shown above to achieve this\n\nconst traineeGrades = {\n  tom: 20,\n  george: 17,\n  abdul: 19,\n};\n\nfor (let name in traineeGrades) {\n  if (traineeGrades[name] > 18) {\n    console.log(`${name.toUpperCase()} - ${traineeGrades[name]}`);\n  }\n}\n\n// Alternatively:\n// const traineeNames = Object.keys(traineeGrades);\n// traineeNames.forEach((name) => {\n//     if (traineeGrades[name] > 18) {\n//         console.log(`${name.toUpperCase()} - ${traineeGrades[name]}`)\n//     }\n// });\n\n// Prints\n// TOM - 20\n// ABDUL - 19\n")))),Object(i.b)("p",null,":::"),Object(i.b)("h2",{id:"coursework"},"Coursework"),Object(i.b)("p",null,"Click ",Object(i.b)("a",{parentName:"p",href:"./homework"},"here")," to view the homework for this lesson."),Object(i.b)("h2",{id:"feedback"},"Feedback"),Object(i.b)("p",null,"Please spend two minutes reviewing this lesson to help us improve it for the future. This feedback will be shared with volunteers."),Object(i.b)(l.a,{module:"JavaScript Core 2",week:"Week 1",mdxType:"Feedback"}))}v.isMDXComponent=!0},269:function(e,n,t){"use strict";t.d(n,"a",(function(){return d})),t.d(n,"b",(function(){return p}));var a=t(0),r=t.n(a);function s(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){s(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},s=Object.keys(e);for(a=0;a<s.length;a++)t=s[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(a=0;a<s.length;a++)t=s[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var c=r.a.createContext({}),b=function(e){var n=r.a.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},d=function(e){var n=b(e.components);return r.a.createElement(c.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return r.a.createElement(r.a.Fragment,{},n)}},m=r.a.forwardRef((function(e,n){var t=e.components,a=e.mdxType,s=e.originalType,o=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),d=b(t),m=a,p=d["".concat(o,".").concat(m)]||d[m]||u[m]||s;return t?r.a.createElement(p,i(i({ref:n},c),{},{components:t})):r.a.createElement(p,i({ref:n},c))}));function p(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var s=t.length,o=new Array(s);o[0]=m;var i={};for(var l in n)hasOwnProperty.call(n,l)&&(i[l]=n[l]);i.originalType=e,i.mdxType="string"==typeof e?e:a,o[1]=i;for(var c=2;c<s;c++)o[c]=t[c];return r.a.createElement.apply(null,o)}return r.a.createElement.apply(null,t)}m.displayName="MDXCreateElement"},270:function(e,n,t){"use strict";t.d(n,"a",(function(){return s}));var a=t(0),r=t.n(a);t(57);function s(e){var n="https://docs.google.com/forms/d/e/1FAIpQLScq8Zgr0pz7aMDj0D768eCpW798XgtDsKfpA6BquqK5Hdtj4A/viewform?embedded=true&entry.1672476057="+e.module.replace(" ","+")+"&entry.74981796="+e.week.replace(" ","+");return r.a.createElement("div",{className:"feedback"},r.a.createElement("div",{className:"feedback__wrapper"},r.a.createElement("iframe",{src:n,width:"640",height:"640",frameborder:"0",marginheight:"0",marginwidth:"0"},"Loading\u2026"),r.a.createElement("center",null,r.a.createElement("p",null,"Not loading? Form can be found"," ",r.a.createElement("a",{target:"_blank",href:n},"here"),". Click"," ",r.a.createElement("a",{target:"_blank",href:"https://docs.google.com/forms/d/1F2mB10japkHAPb3H-9Q4YrYH0i61GoMG1tk-P4ZT808/edit"},"here")," ","to get edit access."))))}},271:function(e,n,t){"use strict";function a(e){var n,t,r="";if("string"==typeof e||"number"==typeof e)r+=e;else if("object"==typeof e)if(Array.isArray(e))for(n=0;n<e.length;n++)e[n]&&(t=a(e[n]))&&(r&&(r+=" "),r+=t);else for(n in e)e[n]&&(r&&(r+=" "),r+=n);return r}n.a=function(){for(var e,n,t=0,r="";t<arguments.length;)(e=arguments[t++])&&(n=a(e))&&(r&&(r+=" "),r+=n);return r}},275:function(e,n,t){"use strict";var a=t(0),r=t(276);n.a=function(){var e=Object(a.useContext)(r.a);if(null==e)throw new Error("`useUserPreferencesContext` is used outside of `Layout` Component.");return e}},276:function(e,n,t){"use strict";var a=t(0),r=Object(a.createContext)(void 0);n.a=r},283:function(e,n,t){"use strict";var a=t(0),r=t.n(a),s=t(275),o=t(271),i=t(58),l=t.n(i);var c=37,b=39;n.a=function(e){var n=e.lazy,t=e.block,i=e.defaultValue,d=e.values,u=e.groupId,m=e.className,p=Object(s.a)(),h=p.tabGroupChoices,O=p.setTabGroupChoices,v=Object(a.useState)(i),N=v[0],g=v[1],j=a.Children.toArray(e.children),f=[];if(null!=u){var w=h[u];null!=w&&w!==N&&d.some((function(e){return e.value===w}))&&g(w)}var y=function(e){var n=e.target,t=f.indexOf(n),a=j[t].props.value;g(a),null!=u&&(O(u,a),setTimeout((function(){var e,t,a,r,s,o,i,c;(e=n.getBoundingClientRect(),t=e.top,a=e.left,r=e.bottom,s=e.right,o=window,i=o.innerHeight,c=o.innerWidth,t>=0&&s<=c&&r<=i&&a>=0)||(n.scrollIntoView({block:"center",behavior:"smooth"}),n.classList.add(l.a.tabItemActive),setTimeout((function(){return n.classList.remove(l.a.tabItemActive)}),2e3))}),150))},E=function(e){var n,t;switch(e.keyCode){case b:var a=f.indexOf(e.target)+1;t=f[a]||f[0];break;case c:var r=f.indexOf(e.target)-1;t=f[r]||f[f.length-1]}null===(n=t)||void 0===n||n.focus()};return r.a.createElement("div",{className:"tabs-container"},r.a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:Object(o.a)("tabs",{"tabs--block":t},m)},d.map((function(e){var n=e.value,t=e.label;return r.a.createElement("li",{role:"tab",tabIndex:N===n?0:-1,"aria-selected":N===n,className:Object(o.a)("tabs__item",l.a.tabItem,{"tabs__item--active":N===n}),key:n,ref:function(e){return f.push(e)},onKeyDown:E,onFocus:y,onClick:y},t)}))),n?Object(a.cloneElement)(j.filter((function(e){return e.props.value===N}))[0],{className:"margin-vert--md"}):r.a.createElement("div",{className:"margin-vert--md"},j.map((function(e,n){return Object(a.cloneElement)(e,{key:n,hidden:e.props.value!==N})}))))}},284:function(e,n,t){"use strict";var a=t(0),r=t.n(a);n.a=function(e){var n=e.children,t=e.hidden,a=e.className;return r.a.createElement("div",{role:"tabpanel",hidden:t,className:a},n)}}}]);