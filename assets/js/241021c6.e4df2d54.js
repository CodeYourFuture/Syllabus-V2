(self.webpackChunkcodeyourfuture_syllabus=self.webpackChunkcodeyourfuture_syllabus||[]).push([[1503],{3905:function(e,t,r){"use strict";r.d(t,{Zo:function(){return p},kt:function(){return d}});var a=r(7294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function s(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},i=Object.keys(e);for(a=0;a<i.length;a++)r=i[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)r=i[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var c=a.createContext({}),o=function(e){var t=a.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):s(s({},t),e)),r},p=function(e){var t=o(e.components);return a.createElement(c.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,i=e.originalType,c=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),u=o(r),d=n,k=u["".concat(c,".").concat(d)]||u[d]||m[d]||i;return r?a.createElement(k,s(s({ref:t},p),{},{components:r})):a.createElement(k,s({ref:t},p))}));function d(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var i=r.length,s=new Array(i);s[0]=u;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l.mdxType="string"==typeof e?e:n,s[1]=l;for(var o=2;o<i;o++)s[o]=r[o];return a.createElement.apply(null,s)}return a.createElement.apply(null,r)}u.displayName="MDXCreateElement"},3633:function(e,t,r){"use strict";r.r(t),r.d(t,{frontMatter:function(){return s},metadata:function(){return l},toc:function(){return c},default:function(){return p}});var a=r(4034),n=r(9973),i=(r(7294),r(3905)),s={id:"learning-objectives",title:"Learning Objectives",sidebar_label:"Learning Objectives"},l={unversionedId:"html-css/week-3/learning-objectives",id:"html-css/week-3/learning-objectives",isDocsHomePage:!1,title:"Learning Objectives",description:"Forms",source:"@site/docs/html-css/week-3/learning-objectives.md",sourceDirName:"html-css/week-3",slug:"/html-css/week-3/learning-objectives",permalink:"/html-css/week-3/learning-objectives",editUrl:"https://github.com/CodeYourFuture/Syllabus-V2/edit/master/docs/html-css/week-3/learning-objectives.md",version:"current",sidebar_label:"Learning Objectives",frontMatter:{id:"learning-objectives",title:"Learning Objectives",sidebar_label:"Learning Objectives"},sidebar:"HTMLCSS",previous:{title:"Instructor Notes",permalink:"/html-css/week-2/instructors"},next:{title:"HTML/CSS - 3",permalink:"/html-css/week-3/lesson"}},c=[{value:"Forms",id:"forms",children:[{value:"What are forms?",id:"what-are-forms",children:[]},{value:"The HTML Form",id:"the-html-form",children:[]},{value:"Accessibility",id:"accessibility",children:[]}]},{value:"Unsorted practical skills",id:"unsorted-practical-skills",children:[]},{value:"Git Merge Conflicts",id:"git-merge-conflicts",children:[]}],o={toc:c};function p(e){var t=e.components,r=(0,n.Z)(e,["components"]);return(0,i.kt)("wrapper",(0,a.Z)({},o,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"forms"},"Forms"),(0,i.kt)("h3",{id:"what-are-forms"},"What are forms?"),(0,i.kt)("ul",{className:"contains-task-list"},(0,i.kt)("li",{parentName:"ul",className:"task-list-item"},(0,i.kt)("input",{parentName:"li",type:"checkbox",checked:!1,disabled:!0})," ","Can answer: what are HTML forms used for?")),(0,i.kt)("h3",{id:"the-html-form"},"The HTML Form"),(0,i.kt)("ul",{className:"contains-task-list"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Fields")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Labels")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Buttons")),(0,i.kt)("li",{parentName:"ul",className:"task-list-item"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("input",{parentName:"p",type:"checkbox",checked:!1,disabled:!0})," ","Can answer: what happens when the user clicks on a form's Submit button?")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"More Field Types")),(0,i.kt)("li",{parentName:"ul",className:"task-list-item"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("input",{parentName:"p",type:"checkbox",checked:!1,disabled:!0})," ","Can: identify the type of form input likely in use in a sample form.")),(0,i.kt)("li",{parentName:"ul",className:"task-list-item"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("input",{parentName:"p",type:"checkbox",checked:!1,disabled:!0})," ","Can: select the correct form inputs when building a simple form.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Fieldsets")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Form field Attributes")),(0,i.kt)("li",{parentName:"ul",className:"task-list-item"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("input",{parentName:"p",type:"checkbox",checked:!1,disabled:!0})," ","Can answer: What's the purpose of a form field's ",(0,i.kt)("inlineCode",{parentName:"p"},"required")," attribute? What about its ",(0,i.kt)("inlineCode",{parentName:"p"},"readonly"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"value"),", or ",(0,i.kt)("inlineCode",{parentName:"p"},"checked")," attributes?")),(0,i.kt)("li",{parentName:"ul",className:"task-list-item"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("input",{parentName:"p",type:"checkbox",checked:!1,disabled:!0})," ","Can answer: When should you use GET or POST as a form's ",(0,i.kt)("inlineCode",{parentName:"p"},"method")," attribute?"))),(0,i.kt)("h3",{id:"accessibility"},"Accessibility"),(0,i.kt)("ul",{className:"contains-task-list"},(0,i.kt)("li",{parentName:"ul",className:"task-list-item"},(0,i.kt)("input",{parentName:"li",type:"checkbox",checked:!1,disabled:!0})," ","Can answer: What are some ways to make an HTML form more accessible to someone who needs to use a screen reader?")),(0,i.kt)("h2",{id:"unsorted-practical-skills"},"Unsorted practical skills"),(0,i.kt)("ul",{className:"contains-task-list"},(0,i.kt)("li",{parentName:"ul",className:"task-list-item"},(0,i.kt)("input",{parentName:"li",type:"checkbox",checked:!1,disabled:!0})," ","Can: manually locate the source of a specific piece of text from a page's rendered view in the source HTML, for a simple case."),(0,i.kt)("li",{parentName:"ul",className:"task-list-item"},(0,i.kt)("input",{parentName:"li",type:"checkbox",checked:!1,disabled:!0})," ","Can: use the browser's inspector to automatically locate the corresponding source for a given element of the rendered view."),(0,i.kt)("li",{parentName:"ul",className:"task-list-item"},(0,i.kt)("input",{parentName:"li",type:"checkbox",checked:!1,disabled:!0})," ","Can: discover the current box model attributes of an element, using the inspector.")),(0,i.kt)("h1",{id:"git-learning-objectives"},"Git learning objectives"),(0,i.kt)("h2",{id:"git-merge-conflicts"},"Git Merge Conflicts"))}p.isMDXComponent=!0}}]);